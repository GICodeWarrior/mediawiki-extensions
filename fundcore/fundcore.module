<?php
/**
 * Implementation of hook_help().
 */
function fundcore_help($section)
{
	switch ($section)
	{
		case 'admin/modules#description':
		     return t('Discloses fundraising data while preserving requested donor privacy.');
	}
}

/**
 * Implementation of hook_perm().
 */
function fundcore_perm()
{
	return array('administer fundcore', 'use fundcore');
}


/**
 * Implementation of hook_menu().
 */
function fundcore_menu($may_cache)
{
	global $user;
	$items = array();

	if ($may_cache)
	{
		$items[] = array(
			'path' => 'fundcore',
			'title' => t('Fundraising C.O.R.E.'),
			'callback' => 'fundcore_page_redirect',
			'access' => user_access('use fundcore'),
		);
		$items[] = array(
			'path' => 'fundcore/list',
			'title' => t('Live contributions'),
			'callback' => 'fundcore_page_main',
			'access' => user_access('use fundcore'),
		);
		$items[] = array(
			'path' => 'fundcore/browse',
			'title' => t('Browse by date'),
			'callback' => 'fundcore_page_browser',
			'access' => user_access('use fundcore'),
			'weight' => 5,
		);
	}
	
	return $items;
}

function fundcore_page_redirect()
{
	drupal_goto('fundcore/list');
}

function _fundcore_statistics($year, $month, $day)
{
	if ($year != '')
	{
		$where .= ' AND YEAR(receive_date) = %d ';
	}
	
	if ($month != '')
	{
		$where .= ' AND MONTH(receive_date) = %d ';
	}
	
	if ($day != '')
	{		
		$where .= ' AND DAY(receive_date) = %d ';
	}
	$sql = 'SELECT SUM(total_amount) AS total, AVG(total_amount) AS average, MIN(total_amount) AS minimum, MAX(total_amount) AS maximum, STDDEV(total_amount) AS sd, COUNT(*) AS num FROM civicrm_contribution WHERE total_amount > 0 ' . $where;

	db_set_active('fundcore_civicrm');
	$res =& db_query($sql, $year, $month, $day);
	
	$srows = array();
	while ($row = db_fetch_object($res))
	{
			$srow = array();
			$srow[] = number_format($row->num);
			$srow[] = number_format($row->minimum, 2);
			$srow[] = number_format($row->average, 2);
			$srow[] = number_format($row->maximum, 2);
			$srow[] = number_format($row->total, 2);
			$srow[] = number_format($row->sd, 2);
			$srows[] = $srow;
	}

	db_set_active();

	// Finish table
	$header = array();
	$header[] = t('Count');
	$header[] = t('Minimum');
	$header[] = t('Mean');
	$header[] = t('Maximum');
	$header[] = t('Total');
	$header[] = t('Standard Deviation');
	
	$fields['currencies'] = array(
		'#type' => 'fieldset',
		'#title' => t('Statistical breakdown (%currency)', array('%currency' => 'USD')),
		'#collapsible' => TRUE,
		'#collapsed' => ($day == ''),
	);
	
	$fields['currencies']['table'] = array(
		'#value' => theme('table', $header, $srows, array('style' => 'width: 100%;'))
	);
	
	return drupal_get_form('fundcore_statistical_breakdown', $fields);
}

function _fundcore_currency_summary($year, $month, $day)
{
	if ($year != '')
	{
		$where .= ' AND YEAR(receive_date) = %d ';
	}
	
	if ($month != '')
	{
		$where .= ' AND MONTH(receive_date) = %d ';
	}
	
	if ($day != '')
	{		
		$where .= ' AND DAY(receive_date) = %d ';
	}
	$sql = 'SELECT IF(source = "" OR source IS NULL, "USD", source) AS currency, total_amount FROM civicrm_contribution WHERE total_amount > 0 ' . $where . ' ORDER BY currency';
	
	db_set_active('fundcore_civicrm');
	$res =& db_query($sql, $year, $month, $day);
	db_set_active();
	
	$srows = array();
	$sum_usd = 0;
	$sum = 0;
	$last_currency = NULL;
	while ($row = db_fetch_object($res))
	{
		$currency = substr($row->currency, 0, 3);
			
		if ($last_currency !== NULL && $currency != $last_currency)
		{		
			$srow = array();
			$srow[] = $last_currency;
			$srow[] = number_format($sum, 2);
			$srow[] = number_format($sum_usd, 2);
			$srows[] = $srow;
			$sum = 0;
			$sum_usd = 0;
		}
		
		$amount = str_replace(',', '', trim(substr($row->currency, 4)));
		
		if ($amount != '')
		{
			$sum += $amount;
		} else {
			$sum += $row->total_amount;	
		}
		
		$sum_usd += $row->total_amount;
		
		$last_currency = $currency;
	}
	
	if ($last_currency !== NULL)
	{
		$srow = array();
		$srow[] = $currency;
		$srow[] = $sum;
		$srow[] = $sum_usd;
		$srows[] = $srow;
	}


	// Finish table
	$header = array();
	$header[] = t('Currency');
	$header[] = t('Amount');
	$header[] = t('Equivalent in %currency', array('%currency' => 'USD'));
	
	$fields['currencies'] = array(
		'#type' => 'fieldset',
		'#title' => t('Breakdown by currency'),
		'#collapsible' => TRUE,
		'#collapsed' => ($day == ''),
	);
	
	$fields['currencies']['table'] = array(
		'#value' => theme('table', $header, $srows, array('style' => 'width: 100%;'))
	);
	
	return drupal_get_form('fundcore_currency_summary', $fields);
}

function fundcore_page_browser()
{
	$year = arg(2);
	$month = arg(3);
	$day = arg(4);

	$output .= _fundcore_currency_summary($year, $month, $day);
	$output .= _fundcore_statistics($year, $month, $day);

	$breadcrumbs = array();
	$base_link = 'fundcore/browse/';
	
	$title = t('Browsing contributions');
	if ($year != '')
	{
		$breadcrumbs[] = l('browse', $base_link);
		$base_link .= $year . '/';
		$title = t('Browsing year %year', array('%year' => $year));
	}
	
	if ($month != '')
	{
		$breadcrumbs[] = l($year, $base_link);
		$base_link .= $month . '/';
		$title = t('Browsing month %year-%month', array('%year' => $year, '%month' => $month));
	}

	if ($day != '')
	{
		$breadcrumbs[] = l($month, $base_link);
		$base_link .= $day . '/';
		$title = t('Browsing day %year-%month-%day', array('%year' => $year, '%month' => $month, '%day' => $day));
	}
	
	drupal_set_title($title);
	drupal_set_breadcrumb($breadcrumbs);
		
	$sql = NULL;
	if ($year == '')
	{
		$sql = 'SELECT SUM(total_amount) AS total, YEAR(receive_date) AS choice FROM civicrm_contribution WHERE total_amount > 0 GROUP BY YEAR(receive_date) ORDER BY choice';	
	}
	else if ($month == '')
	{
		$sql = 'SELECT SUM(total_amount) AS total, MONTH(receive_date) AS choice FROM civicrm_contribution WHERE total_amount > 0 AND YEAR(receive_date) = %d GROUP BY MONTH(receive_date) ORDER BY choice';
	}
	else if ($day == '')
	{
		$sql = 'SELECT SUM(total_amount) AS total, DAY(receive_date) AS choice FROM civicrm_contribution WHERE total_amount > 0 AND YEAR(receive_date) = %d AND MONTH(receive_date) = %d GROUP BY DAY(receive_date) ORDER BY choice';
	}

	if ($sql !== NULL)
	{
		db_set_active('fundcore_civicrm');
		$res =& db_query($sql, $year, $month, $day);
		db_set_active();
		//$res =& db_query($sql);
		
		$trows = array();
		while ($row = db_fetch_object($res))
		{
			$trow = array();
			$trow[] = l($row->choice, $base_link . $row->choice);
			$trow[] = number_format($row->total, 2);
			$trows[] = $trow;		
		}

		if (count($trows) > 0)
		{
			// Finish table
			$header = array();
			
			if ($year == '')
				$header[] = t('Year');
			else if ($month == '')
				$header[] = t('Month');	
			else if ($day == '')
				$header[] = t('Day');
		
			$header[] = t('Total in %currency', array('%currency' => 'USD'));
			
			$output .= theme('table', $header, $trows, array('style' => 'width: 100%;'));
		}
	}
	
	/*
	db_set_active('fundcore_civicrm');
	$sql = 'SET NAMES "UTF8"';
	$res =& db_query($sql);
	$sql = 'SHOW VARIABLES LIKE "character_set%"';
	$res =& db_query($sql);
	db_set_active();
	
	while ($row = db_fetch_object($res))
	{
		$output .= '<!--' . print_r($row) . '-->';
	}
	*/
	
	return $output;	
}

function fundcore_page_main()
{
	$content .= '<p><img src="http://upload.wikimedia.org/fundraising/2006/meter.png" alt="..." style="margin-bottom: 2px;" />';
	$content .= '<br /><a href="http://wikimediafoundation.org/wiki/' . t('Fundraising') . '/"><strong>' . t('Make a Donation') . '</strong></a></p>';
	$content .= '<p><strong>Coming soon:</strong> RSS feeds, maybe an IRC bot, and ';
	$content .= '<a href="http://meta.wikimedia.org/wiki/Fundraising_C.O.R.E.">more translations</a>.</p>';
	$content .= _fundcore_filter();
	$content .= _fundcore_results();
	return $content;
}

function _fundcore_db_connect()
{
	static $conn;
	
	if (!isset($conn))
	{
		$conn =& db_connect(variable_get('fundcore_civicrm_dsn'));	
	}
	
	return $conn;
}

function _fundcore_default_start()
{
	return array('day'=> date('d'),'month'=>date('m'),'year'=>date('Y') - 1);
}

function _fundcore_filter()
{
	$fields['filter'] = array(
		'#type' => 'fieldset',
		'#title' => t('Filter contribution results'),
		'#collapsible' => TRUE,
		'#collapsed' => TRUE,
	);

	$start = _fundcore_default_start();

	if (arg(2) != '')
	{
		$split = explode('-', arg(2));
		$start = array('day'=> $split[2],'month'=>$split[1],'year'=> $split[0]);
	}

	$end = array('day'=> date('d'),'month'=>date('m'),'year'=>date('Y'));

	if (arg(3) != '')
	{
		$split = explode('-', arg(3));
		$end = array('day'=> $split[2],'month'=>$split[1],'year'=> $split[0]);
	}

	$fields['filter']['start'] = array(
	 '#type' => 'date',
	 '#title' => t('On or after'),
	 '#default_value' => $start,
	);
	$fields['filter']['end'] = array(
	 '#type' => 'date',
	 '#title' => t('On or before'),
	 '#default_value' => $end,
	);
	
	 $fields['filter']['currency'] = array(
	  '#type' => 'select',
	  '#title' => t('Restrict to a specific currency'),
	  '#default_value' => arg(5),
	  '#options' => array(
	    '' => '',
	    'USD' => 'U.S. Dollars',
	    'EUR' => 'Euros',
	    'JPY' => 'Japanese Yen',
	    'CZK' => 'CZK',
	  ),
	);	
	
	
	$fields['filter']['only_with_comments'] = array(
	 '#type' => 'checkbox',
	 '#title' => t('Only show contributions with comments'),
	 '#default_value' => arg(4),
	);	
	
	$fields['filter']['submit'] = array(
	 '#type' => 'submit',
	 '#value' => t('View results'),
	);
	
	return drupal_get_form('fundcore_filter', $fields);
}

function fundcore_filter_submit($form_id, $edit)
{
	drupal_goto('fundcore/list/' . $edit['start']['year'] . '-' . $edit['start']['month'] . '-' . $edit['start']['day'] . '/' .$edit['end']['year'] . '-' . $edit['end']['month'] . '-' . $edit['end']['day'] . '/' . $edit['only_with_comments'] . '/' . $edit['currency'] . '/');
}

function _fundcore_results()
{
	// Set bounding dates
	$start = _fundcore_default_start();	
	if (arg(2) != '')
	{
		$split = explode('-', arg(2));
		$start = array('day'=> $split[2],'month'=>$split[1],'year'=> $split[0]);
	}
	
	$end = array('day'=> date('d'),'month'=>date('m'),'year'=>date('Y'));
	if (arg(3) != '')
	{
		$split = explode('-', arg(3));
		$end = array('day'=> $split[2],'month'=>$split[1],'year'=> $split[0]);
	}
	$sql_start = $start['year'] . '-' . $start['month'] . '-' . $start['day'];
	$sql_end = $end['year'] . '-' . $end['month'] . '-' . $end['day'] . ' 23:59';
	
	// Query contributions
	$sql = 'SELECT receive_date, total_amount, c.source, note, display_name, do_not_trade, test_note FROM civicrm_contribution c INNER JOIN civicrm_contact p ON contact_id = p.id WHERE total_amount > 0 AND receive_date >= "%s" AND receive_date <= "%s" ';
	
	if (arg(4) == '1')
	{
		$sql .= 'AND (note <> "" AND note IS NOT NULL) ';
	}

	if (arg(5) != '')
	{
		$sql .= 'AND (c.source LIKE "%s%%") ';
	}
	
	$sql .= 'ORDER BY receive_date DESC';
	db_set_active('fundcore_civicrm');
	$res =& pager_query($sql, 25, 0, NULL, $sql_start, $sql_end, arg(5));
	db_set_active();

	//$res =& db_queryd($sql, $sql_start, $sql_end);

	if ($res === FALSE)
	{
		drupal_set_message('Contribution query error.', 'error');
		return '';
	}


	// Construct output rows
	$rows = array();
	while ($row = db_fetch_object($res))
	{
		if ($row->do_not_trade == 0)
		{
			$name = '<strong>' . htmlentities($row->display_name, ENT_QUOTES, 'UTF-8') . '</strong>';
	 	} else {
			$name = '<strong>' . t('Anonymous') . '</strong>';
	 	}
	 		
		
		if ($row->note != '')
		{
			//$name .= '<br />' . htmlentities($row->note);
			//$name .= '<br />' . htmlentities(mb_convert_encoding($row->test_note, 'windows-1252', 'UTF-8'));
			//$name .= '<br />' . htmlentities(mb_convert_encoding($row->note, 'windows-1252', 'UTF-8'));
			$name .= '<br />' . htmlentities($row->note, ENT_QUOTES, 'UTF-8');
			$name .= '<!-- ' . mb_convert_encoding($row->note, 'UTF-16', 'UTF-8') . ' -->';
		}

		$trow = array();
		$trow[] = array('data' => $name, 'style' => 'width: 300px');
		$trow[] = array('data' => check_plain($row->receive_date), 'style' => 'width: 180px');
		$trow[] = check_plain($row->source);
		$trow[] = check_plain($row->total_amount);

		$rows[] = $trow;
	}

	// Error for no contributions
	if (count($rows) == 0)
	{
		return '<p>' . t('Sorry, there are no matching contributions.') . '</p>';
	}

	// Finish table
	$header = array();
	
	$header[] = t('Name and Comment');
	$header[] = array('data' => t('Time (%timezone)', array('%timezone' => 'UTC')), 'style' => 'width: 60px;');
	$header[] = t('Amount');
	$header[] = t('Equivalent in %currency', array('%currency' => 'USD'));
	//$header[] = t('Comment');
	
	$output .= theme('table', $header, $rows, array('style' => 'width: 100%;'));
	
	// Give a pager
	$output .= theme('pager', NULL, 25, 0);
	
	return $output;
}
