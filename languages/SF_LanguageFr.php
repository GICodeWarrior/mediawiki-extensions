<?php
/**
 * @author Yaron Koren
 */

class SF_LanguageFr {

/* private */ var $sfContentMessages = array(
	'sf_template_docu' => 'Ceci est la modÃ¨le Â« $1 Â». Elle doit être appelée par le format suivant:',
	'sf_template_docufooter' => 'Modifier la page pour voir la texte de la modÃ¨le.',
	'sf_form_relation' => 'Utilise le formulaire',
	// month names are already defined in MediaWiki, but unfortunately
	// there they're defined as user messages, and here they're
	// content messages
	'sf_january' => 'janvier',
	'sf_february' => 'fÃ©vrier',
	'sf_march' => 'mars',
	'sf_april' => 'avril',
	'sf_may' => 'mai',
	'sf_june' => 'juin',
	'sf_july' => 'juillet',
	'sf_august' => 'aoÃ»t',
	'sf_september' => 'septembre',
	'sf_october' => 'octobre',
	'sf_november' => 'novembre',
	'sf_december' => 'dÃ©cembre'
);

/* private */ var $sfUserMessages = array(
	'templates' => 'ModÃ¨les',
	'sf_templates_docu' => 'Les modÃ¨le suivantes existent dans le wiki.',
	'sf_templates_definescat' => 'dÃ©fine la catÃ©gorie:',
	'createtemplate' => 'CrÃ©er une modÃ¨le',
	'sf_createtemplate_namelabel' => 'Nom de modÃ¨le:',
	'sf_createtemplate_categorylabel' => 'CatÃ©gorie dÃ©finÃ©e par cette modÃ¨le (volontaire):',
	'sf_createtemplate_templatefields' => 'Champs de modÃ¨le',
	'sf_createtemplate_fieldsdesc' => 'Pour une modÃ¨le qui n\'utilise pas de noms pour les champs, simplement entrer l\'index de ce champ (e.g. 1, 2, 3, etc.) comme le nom, au lieu d\'un nom actuel.',
	'sf_createtemplate_fieldname' => 'Nom de champ:',
	'sf_createtemplate_displaylabel' => 'Ã‰tiquette pour l\'affichage:',
	'sf_createtemplate_semanticfield' => 'PropriÃ¨tÃ¨ sÃ¨mantique:',
	'sf_createtemplate_addfield' => 'Ajouter un champ',
	'sf_createtemplate_deletefield' => 'Efface',
	'forms' => 'Formulaires',
	'sf_forms_docu' => 'Les formulaires suivants existent dans le wiki.',
	'createform' => 'CrÃ©er un formulaire',
	'sf_createform_nameinput' => 'Nom de formulaire (la convention est de nommer le formulaire aprÃ¨s la modÃ¨le principale qu\'il peuple):',
	'sf_createform_template' => 'ModÃ¨le:',
	'sf_createform_templatelabelinput' => 'Ã‰tiquette de modÃ¨le (volontaire):',
	'sf_createform_allowmultiple' => 'Laisser plusieurs (ou zero) instances de ce modÃ¨le dans la page',
	'sf_createform_field' => 'Champ:',
	'sf_createform_fieldattr' => 'Ce champ dÃ©finit l\'attribut $1, de type $2.',
	'sf_createform_fieldattrunknowntype' => 'Ce champ dÃ©finit l\'attribut $1, de type non spÃ©cifiÃ© (assuming to be $2).',
	'sf_createform_fieldrel' => 'Ce champ dÃ©finit la relation $1.',
	'sf_createform_formlabel' => 'Ã‰tiquette dans le formulaire:',
	'sf_createform_hidden' =>  'CachÃ©',
	'sf_createform_restricted' =>  'Restreint',
	'sf_createform_mandatory' =>  'Obligatoire',
	'sf_createform_removetemplate' => 'Enlever cette modÃ¨le',
	'sf_createform_addtemplate' => 'Ajouter une modÃ¨le:',
	'sf_createform_beforetemplate' => 'Avant modÃ¨le:',
	'sf_createform_atend' => 'Ã€ la fin',
	'sf_createform_add' => 'Ajouter',
	'addpage' => 'Ajouter une page',
	'addoreditdata' => 'Modifer ou ajouter donnÃ©es',
	'adddata' => 'Ajouter donnÃ©es',
	'sf_adddata_badurl' => 'Ceci est la page pour ajouter les donnÃ©es. Il faut indiquer un nom de formulaire et une page cible dans l\'URL; l\'URL doit ressembler Ã|  Â« Special:AddData?form=&lt;nom de formulaire&gt;&target=&lt;nom de page cible&gt; Â» ou Â« Special:AddData/&lt;nom de formulaire&gt;/&lt;nom de page cible&gt; Â».',
	'sf_forms_adddata' => 'Ajouter donnÃ©es avec ce formulaire',
	'editdata' => 'Modifier les donnÃ©es',
	'form_edit' => 'Modifier avec formulaire',
	'sf_editdata_badurl' => 'Ceci est la page pour modifier les donnÃ©es. Il faut indiquer un nom de formulaire et une page cible dans l\'URL; l\'URL doit ressembler Ã|  Â« Special:EditData?form=&lt;nom de formulaire&gt;&target=&lt;nom de page cible&gt; Â» ou Â« Special:EditData/&lt;nom de formulaire&gt;/&lt;nom de page cible&gt; Â».',
	'sf_editdata_remove' => 'Enlever',
	'sf_editdata_addanother' => 'Ajouter un autre',
	'sf_editdata_freetextlabel' => 'Texte libre',

	'sf_blank_error' => 'ne peut pas être blanc'
);

	/**
	 * Function that returns the namespace identifiers.
	 */
	function getNamespaceArray() {
		return array(
			SF_NS_FORM           => 'Formulaire',
			SF_NS_FORM_TALK      => 'Discussion_formulaire'
		);
	}

	/**
	 * Function that returns all content messages (those that are stored
	 * in some article, and can thus not be translated to individual users).
	 */
	function getContentMsgArray() {
		return $this->sfContentMessages;
	}

	/**
	 * Function that returns all user messages (those that are given only to
	 * the current user, and can thus be given in the individual user language).
	 */

	function getUserMsgArray() {
		return $this->sfUserMessages;
	}

}

?>
