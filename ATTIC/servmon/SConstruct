# @(#) $Header$ 

config = dict()
execfile('buildconfig', config)

cc = ARGUMENTS.get('cc', config['cc'])
cxx = ARGUMENTS.get('cxx', config['cxx'])

cflags = ARGUMENTS.get('cflags', config['cflags'])
cppflags = ARGUMENTS.get('cppflags', config['cppflags'])
ldflags = ARGUMENTS.get('ldflags', config['ldflags'])

prefix = ARGUMENTS.get('prefix', config['prefix'])
boostsuffix = ARGUMENTS.get('boostsuffix', config['boostsuffix'])

libpath = ARGUMENTS.get('libpath', config['libpath'])
cpppath = ARGUMENTS.get('cpppath', config['cpppath'])

import os
try:
	os.remove('sminfo.cxx')
except:
	pass

srcs = Split(	'servmon.cxx csmplex.cxx smthr.cxx smnet.cxx smutl.cxx smcfg.cxx smirc.cxx '
		'smauth.cxx smtmr.cxx smmon.cxx smqb.cxx smmc.cxx smalrm.cxx l_memcache.c '
		'smlog.cxx smstdrt.cxx smtrm.cxx msgtab.cxx')
		
conflags = []
env = Environment(CPPFLAGS = cppflags + ' -DPFX="\\"' + prefix + '\\""',
		CCFLAGS = cflags,
		LDFLAGS = ldflags,
		CC = cc,
		CXX = cxx,
		CPPPATH = cpppath + ['.', 'include'],
		LIBPATH = libpath,
		LIBS = [])
conf = Configure(env)
socketlibs = []
# BSD & glibc has err.h.  Most others don't.
if conf.CheckCHeader('err.h'):
	env.Append(CPPFLAGS = ' -DHAVE_ERR_H')
if conf.CheckCHeader('paths.h'):
	env.Append(CPPFLAGS = ' -DHAVE_PATHS_H')
if conf.CheckCHeader('mntent.h'):
	env.Append(CPPFLAGS = ' -DHAVE_MNTENT_H')
if conf.CheckCHeader(['stdio.h', 'sys/mnttab.h']):
	env.Append(CPPFLAGS = ' -DHAVE_SYS_MNTTAB_H')
# snmp needs kstat on Solaris.
conf.CheckLib('kstat')
if conf.CheckLib('nsl'):
	socketlibs += ['nsl']
if conf.CheckLib('socket'):
	socketlibs += ['socket']
if conf.CheckLib('resolv'):
	socketlibs += ['resolv']
conf.CheckLib('pkcs11')
if conf.CheckFunc('setmntent'):
	env.Append(CPPFLAGS = ' -DHAVE_SETMNTENT')
if conf.CheckFunc('getmntent'):
	env.Append(CPPFLAGS = ' -DHAVE_GETMNTENT')
if conf.CheckFunc('daemon'):
	env.Append(CPPFLAGS = ' -DHAVE_DAEMON')
env = conf.Finish()
# these aren't checked above because they're required... except maybe pthread.
env.Append(LIBS = ['pthread', 'boost_thread'+boostsuffix, 'boost_regex'+boostsuffix, 'netsnmp', 'ssl', 'crypto', 'mysqlclient'])
env.Command('sminfo.cxx', 'sminfo.sh', '/bin/sh $SOURCE >$TARGET')
env.Command(['msgtab.hxx', 'msgtab.cxx'], ['mktab', 'messages.tab'], './mktab messages.tab')

env.Program ('mktab', ['mktab.cxx'], LIBS = [])
env.Program ('servmon', srcs)
env.Program ('smlogmsg', ['smlogmsg.c'], LIBS = socketlibs)
env.Program ('systatd', ['systatd.c'], LIBS = socketlibs)
env.Alias('install', prefix)
