#!/usr/bin/env php
<?php
error_reporting( 0 );
/*
 * Returns a space separated list of all active MW versions (e.g. "x.xx").
 * Versions are read from /usr/local/apache/common-local/wikiversions.cdb.
 *
 * Given --home, versions are instead read from /home/wikipedia/common/wikiversions.cdb.
 * Given --withdb, each item in the list will be appended with '=' followed by
 * 		the DB name of *some* wiki that uses that version. Used to run maintenance scripts.
 * Given --extended, versions will include any extra suffix specified in wikiversions.cdb.
 * 		This may result in more items being listed than without.
 * Given --report, error messages would be displayed if this dies.
 *
 * @return string
 */
function getActiveWikiVersions() {
	global $argv;
	$options = $argv; // copy
	array_shift( $options ); // first item is this file

	if ( in_array( '--home', $options ) ) {
		$path = '/home/wikipedia/common/wikiversions.dat';
	} else {
		$path = '/usr/local/apache/common-local/wikiversions.dat';
	}

	$verList = array_filter( explode( "\n", file_get_contents( $path ) ) );
	if ( !count( $verList ) ) {
		if ( in_array( '--report', $options ) ) {
			echo( "Unable to read wikiversions.dat.\n" );
		}
		die( 1 );
	}

	$result = $activeVersions = array();
	foreach ( $verList as $row ) {
		$items = explode( ' ', trim( $row ) );
		$dbName = $items[0];
		$version = $items[1];
		$extVersion = isset( $items[2] ) ? $items[2] : '';

		if ( substr( $version, 0, 4 ) !== 'php-' ) {
			if ( in_array( '--report', $options ) ) {
				echo( "Unable to read wikiversions.dat entry: $version.\n" );
			}
			die( 1 );
		}
		$version = substr( $version, 4 ); // remove 'php-'

		if ( $extVersion !== '' && in_array( '--extended', $options ) ) {
			$version .= "-$extVersion";
		}

		if ( !isset( $activeVersions[$version] ) ) {
			$activeVersions[$version] = 1;
			if ( in_array( '--withdb', $options ) ) {
				$result[] = "{$version}={$dbName}";
			} else {
				$result[] = "{$version}";
			}
		}
	}

	return implode( ' ', $result );
}

echo getActiveWikiVersions() . "\n";
