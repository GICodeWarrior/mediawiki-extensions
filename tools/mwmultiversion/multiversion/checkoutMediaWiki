#!/usr/bin/env php
<?php
error_reporting( E_ALL );
/**
 * Automatically SVN checkout a MediaWiki version and do some basic wmf setup.
 * LocalSettings.php will be created (which loads CommonSettings.php) and verious
 * symlinks will also be created.
 *
 * The first argument is the SVN directory (relative to mediawiki/branches/wmf).
 * This is typically a version of the format "X.XXwmfX" ("e.g. 1.17wmf1").
 * The second argument is the target path (relative to /home/wikipedia/common/)
 * to store local copy of the SVN checkout. This is typically of the format "php-X.XX".
 *
 * The script will not run if files already existing in the target directory.
 * Also, assume the user running this script must have an SVN account
 * with the SSH agent/key available.
 *
 * @return void
 */
function checkoutMediaWiki() {
	global $argv;
	$commonHomeDir = '/home/wikipedia/common';
	$commonLocalDir = '/usr/local/apache/common-local';

	$argsValid = false;
	if ( count( $argv ) >= 3 ) {
		$svnVersion = $argv[1]; // e.g. "X.XXwmfX"
		$dstVersion = $argv[2]; // e.g. "php-X.XX"
		if ( preg_match( '/^php-((?:\d+\.\d+|trunk)(?:-\w+)?)$/', $dstVersion, $m ) ) {
			$dstVersionNum = $m[1];
			$argsValid = true;
		}
	}

	if ( !$argsValid ) {
		die( "Usage: checkoutMediaWiki X.XXwmfX php-X.XX\n" );
	}

	echo "Creating new MediaWiki install at $commonHomeDir/$dstVersion...\n\n";

	# The url to SVN to checkout from
	$source = "svn+ssh://svn.wikimedia.org/svnroot/mediawiki/branches/wmf/$svnVersion";

	# Create the destination path to SVN checkout to...
	$destIP = "$commonHomeDir/$dstVersion";
	if ( file_exists( $destIP ) ) {
		print "Skipping checkout, the directory $destIP already exists.\n";
	} else {
		print "Creating checkout directory $destIP...";
		mkdir( $destIP, 0775 );
		print "done.\n";

		print "Checking out $source to $destIP...\n";
		# Checkout the SVN directory...
		$retval = 1; // error by default?
		passthru( "svn checkout $source $destIP", $retval );
		if ( $retval !== 0 ) {
			rmdir( $destIP ); // rollback
			die( "\nUnable to checkout SVN path.\n" );
		}
		print "...SVN checkout done.\n";
	}

	$localSettingsCode = <<<EOT
<?php
# WARNING: This file is publically viewable on the web. Do not put private data here.
if ( defined('TESTWIKI') ) {
	include_once( "/home/wikipedia/common/wmf-config/CommonSettings.php" );
} else {
	include_once( "/apache/common/wmf-config/CommonSettings.php" );
}
EOT;

	# Create LocalSettings.php stub...
	$path = "$destIP/LocalSettings.php";
	if ( !file_exists( $path ) ) {
		if ( file_put_contents( $path, $localSettingsCode ) ) {
			print "Created LocalSettings.php file.\n";
		}
	} else {
		print "File already exists: $path\n";
	}

	# Create symlink to wmf-config/AdminSettings.php...
	$path = "$destIP/AdminSettings.php";
	$link = "../wmf-config/AdminSettings.php";
	createSymlink( $path, $link, "Created AdminSettings.php symlink." );

	# Create symlink to wmf-config/StartProfiler.php...
	$path = "$destIP/StartProfiler.php";
	$link = "../wmf-config/StartProfiler.php";
	createSymlink( $path, $link, "Created StartProfiler.php symlink." );

	# Create bits.wikimedia.org symlinks...
	$path = "$commonHomeDir/docroot/bits/skins-$dstVersionNum";
	$link = "$commonLocalDir/php-$dstVersionNum/skins/";
	createSymlink( $path, $link, "Created skins-$dstVersionNum symlink." );

	$path = "$commonHomeDir/docroot/bits/w/extensions-$dstVersionNum";
	$link = "$commonLocalDir/php-$dstVersionNum/extensions";
	createSymlink( $path, $link, "Created w/extensions-$dstVersionNum symlink." );

	# Create secure.wikimedia.org symlinks...
	$path = "$commonHomeDir/docroot/secure/skins-$dstVersionNum";
	$link = "$commonLocalDir/php-$dstVersionNum/skins";
	createSymlink( $path, $link, "Created secure/skins-$dstVersionNum symlink." );

	# Create skins/resources symlinks...
	$path = "$commonHomeDir/live-1.5/extensions-$dstVersionNum";
	$link = "$commonLocalDir/php-$dstVersionNum/extensions";
	createSymlink( $path, $link, "Created live-1.5/extensions-$dstVersionNum symlink." );

	$path = "$commonHomeDir/live-1.5/skins-$dstVersionNum";
	$link = "$commonLocalDir/php-$dstVersionNum/skins";
	createSymlink( $path, $link, "Created live-1.5/skins-$dstVersionNum symlink." );

	$path = "$commonHomeDir/live-1.5/resources-$dstVersionNum";
	$link = "$commonLocalDir/php-$dstVersionNum/resources";
	createSymlink( $path, $link, "Created live-1.5/resources-$dstVersionNum symlink." );

	# Create libs symlinks...
	$libDir = "$commonHomeDir/php-$dstVersionNum/lib";
	if ( !file_exists( $libDir ) ) {
		mkdir( $libDir, 0775 );
	}
	$path = "$libDir/geshi";
	if ( !file_exists( $path ) ) {
		if ( symlink( "../../lib/geshi", $path ) ) {
			print "Created php-$dstVersionNum/lib/geshi symlink.\n";
		}
	} else {
		print "Symlink file already exists: $path\n";
	}

	# Create l10n cache dir
	$l10nDir = "$commonHomeDir/php-$dstVersionNum/cache/l10n";
	if ( !file_exists( $l10nDir ) ) {
		if ( mkdir( $l10nDir, 0775 ) ) {
			print "Created php-$dstVersionNum/cache/l10n directory.\n";
		}
	} else {
		print "Directory already exists: $l10nDir\n";
	}

	print "\nMediaWiki $dstVersionNum, from $svnVersion, successfully checked out.\n";
}

function createSymlink( $path, $link, $createdMsg ) {
	if ( !file_exists( $path ) ) {
		if ( symlink( $link, $path ) ) {
			print "$createdMsg\n";
		}
	} else {
		print "Symlink file already exists: $path\n";
	}
}

checkoutMediaWiki();
