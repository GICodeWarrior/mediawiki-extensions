viaf.user.js, a Greasemonkey script
which detects VIAF numbers on web pages and creates related links

Provisionally homepages and screenshots:

	http://de.wikipedia.org/wiki/Wikipedia:WikiConvention/ \
	Programm/VIAF/en#Greasemonkey_script (en)

	http://de.wikipedia.org/wiki/Wikipedia:WikiConvention/ \
	Programm/VIAF#Greasemonkey-Skript (de)

Version: 0.203
Last updated: 20110829

What are VIAF numbers ?

  http://en.wikipedia.org/wiki/Wikipedia:Authority_control#VIAF
  "The VIAF ID corresponding to the subject of the article can be found on
  http://viaf.org, which combines authority records from many organizations
  worldwide into single datasets..."
  
The viaf.user.js script tries to generously detect VIAF numbers as part of a web
page's text, and also as part of links (urls). It detects them also as part
of texts like " ... VIAF2= ..." (see program code of viaf.user.js for details)
by applying some magic regular expressions.

Detected numbers are indicated with bright cyan colour to attract the
user's attention.

While detecting the numbers, the script adds new links to additional servers.

Such new links come in yellow and have the detected VIAF number as part of the
url, i.e. are deep links (single-click solution).

Those VIAF numbers which are only part of a url (i.e not in the text) are not
apparent - without using this script. Numbers as part of urls are treated in the
same way as numbers in the text. The script adds a dotted red underline to urls
which contain a VIAF and when matching a magic regular expression
(see program code for details).

The VIAF number is then extracted from the url and also shown on the page
in cyan colour with a black dotted underline as indication.

A summary box (6) lists all distinct VIAF numbers to facilitate cut & paste of
the extracted numbers; this can be disabled in the program code.

The set of further server urls can be adapted in the program code.
It relies on jQuery and two further javascripts, which are fetched automatically
and has an integrated update checker (currently disabled) which looks for newer
versions of it and prompts the user in such case.

It does not automatically install a newer version.

== To Do ==
* check detection and algorithm of VIAF2...VIAF9 numbers
* check why it does not work inside <span class=plainlinks> </span> tags
* add a user-interface or mechanism to enable/disable the summary alert box
  without the need to change program code
* revise and enable the update mechanism
* add a ajax request module to fetch author names for numbers from toolserver
  and show them live on the current page; define a JSONP data format
