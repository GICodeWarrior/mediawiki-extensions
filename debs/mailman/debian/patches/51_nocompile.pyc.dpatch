#! /bin/sh -e
## 51_nocompile.pyc.dpatch by Tollef Fog Heen <tfheen@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Don't do the compileall dance.  It'll just waste CPU cycles.

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch ${2:+-d $2}}"

if [ $# -lt 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $patch_opts -p1 < $0;;
    -unpatch) patch $patch_opts -p1 -R < $0;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1;;
esac

exit 0
@DPATCH@

--- mailman-2.1.4.orig/Makefile.in
+++ mailman-2.1.4/Makefile.in
@@ -124,7 +124,7 @@
 	do \
 	    (cd $$d; $(MAKE) DESTDIR=$(DESTDIR) install); \
 	done
-	$(PYTHON) -c 'from compileall import *; compile_dir("$(DESTDIR)$(prefix)/Mailman")'
+	#$(PYTHON) -c 'from compileall import *; compile_dir("$(DESTDIR)$(prefix)/Mailman")'
 
 # Only run bin/update if we aren't installing in DESTDIR, as this
 # means there are probably no lists to deal with, and it wouldn't
