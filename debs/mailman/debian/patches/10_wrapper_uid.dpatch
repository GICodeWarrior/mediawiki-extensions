#! /bin/sh -e
## 10_wrapper_uid.dpatch by Tollef Fog Heen <tfheen@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Makes sure we're called with the right UID and GID

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch ${2:+-d $2}}"

if [ $# -lt 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $patch_opts -p1 < $0;;
    -unpatch) patch $patch_opts -p1 -R < $0;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1;;
esac

exit 0
@DPATCH@

--- mailman-2.1.4.orig/src/cgi-wrapper.c
+++ mailman-2.1.4/src/cgi-wrapper.c
@@ -42,7 +42,7 @@
         char* fake_argv[3];
 
         running_as_cgi = 1;
-        check_caller(logident, parentgroup);
+        if (getgid() >= 100 && getgid() != 65534) check_caller(LOG_IDENT, LEGAL_PARENT_GROUP);
 
         /* For these CGI programs, we can ignore argc and argv since they
          * don't contain anything useful.  `script' will always be the driver
--- mailman-2.1.4.orig/src/mail-wrapper.c
+++ mailman-2.1.4/src/mail-wrapper.c
@@ -74,7 +74,7 @@
                 fatal(logident, MAIL_ILLEGAL_COMMAND,
                       "Illegal command: %s", argv[1]);
 
-        check_caller(logident, parentgroup);
+       if (getgid() >= 100 && getgid() != 65534) check_caller(logident, LEGAL_PARENT_GROUP);
 
         /* If we got here, everything must be OK */
         status = run_script(argv[1], argc, argv, env);
