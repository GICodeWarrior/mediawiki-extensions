#!/usr/bin/make -f
# -*- makefile -*- made with the aid of debmake, by Christoph Lameter,
# based on the sample debian/rules file for GNU hello by Ian Jackson.

package=mailman
PACKAGE=$(package)

include /usr/share/dpatch/dpatch.make

binaries=list_lists find_member config_list mmsitepass newlist rmlist	\
	add_members list_members remove_members arch clone_member	\
	sync_members check_db check_perms list_admins withlist

#manpages=move_list.8 list_lists.8 find_member.8 config_list.8 digest_arch.8 mmsitepass.8 newlist.8 rmlist.8 add_members.8 list_members.8 remove_members.8 mmarch.8 clone_member.8 sync_members.8 check_db.8 check_perms.8
manpages = debian/*.8
#export DH_VERBOSE=1

SHELL=/bin/bash

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
INSTALL_PROGRAM += -s
endif

build: patch-stamp Makefile debian/po/templates.pot
	$(MAKE) 
	touch build

debian/po/templates.pot: debian/templates
	@debconf-updatepo

Makefile:
	if [ -x /usr/bin/autoconf2.50 ]; then \
	  autoconf2.50; \
	else \
	  autoconf; \
	fi
	./configure --prefix=/var/lib/$(package) --with-username=list \
		--with-groupname=list \
		--with-mail-gid=daemon --with-cgi-gid=www-data \
		--without-permcheck --with-mailhost=localhost \
		--with-urlhost=localhost

clean: unpatch
	$(checkdir)
	-$(MAKE) distclean
	rm -rf build Makefile debian/ucffiles debian/mailman.postinst.ucf
	rm -f debian/mailman.postrm.ucf
	dh_clean
	rm -rf $$(find . -name "*~")
	chmod +x debian/{prerm,postinst}

binary-indep:	checkroot build
	$(checkdir)
# There are no architecture-independent files to be uploaded
# generated by this package.  If there were any they would be
# made here.


binary-arch:	checkroot build
	$(checkdir)
#	rm -rf debian/mailman && install -d debian/mailman
	dh_installdirs
	dh_installdocs ACKNOWLEDGMENTS README* TODO BUGS NEWS FAQ
	dh_installchangelogs
	$(MAKE) doinstall prefix=$$(pwd)/debian/mailman/var/lib/$(package) \
		var_prefix=$$(pwd)/debian/mailman/var/lib/$(package) \
		icondir=$$(pwd)/debian/mailman/usr/share/images/mailman \
		ICONDIR=$$(pwd)/debian/mailman/usr/share/images/mailman

	rmdir debian/$(package)/var/lib/mailman/pythonlib

# move the nonchanging directories to /usr/lib/mailman, except for
# cgi-bin, which goes to /usr/lib/cgi-bin/mailman

	cd debian/mailman/var/lib/$(package) ; \
	   mv cgi-bin ../../../usr/lib/cgi-bin/mailman ; \
	   for i in Mailman bin cron mail scripts; do \
		mv $$i ../../../usr/lib/$(package); \
	   done


	# link them back to /var/lib/mailman
	for i in debian/mailman/usr/lib/$(package)/*; do \
	   dh_link usr/lib/$(package)/`basename $$i` var/lib/$(package)/`basename $$i`; \
	done

	# Link cgi-bin as well
	dh_link usr/lib/cgi-bin/$(package) var/lib/$(package)/cgi-bin

	# Backwards compatibility link
	dh_link usr/lib/mailman/mail/mailman usr/lib/mailman/mail/wrapper
	dh_link usr/share/images/mailman usr/share/doc/mailman/images
	rmdir debian/$(package)/var/lib/mailman/icons
	dh_link usr/share/images/mailman var/lib/mailman/icons

        # move the templates to /etc/mailman
	mv debian/mailman/var/lib/$(package)/templates debian/mailman/etc/mailman

	# link it back to /var/lib/mailman/templates
	dh_link etc/mailman var/lib/$(package)/templates

	# remove the log directory and link it to /var/log/mailman
	rmdir debian/mailman/var/lib/$(package)/logs 
	dh_link var/log/mailman var/lib/$(package)/logs

	# move the pending subscriptions database so it doesnt overwrite the
	# old one when installing

        # move the locks to /var/lock
	mv debian/mailman/var/lib/$(package)/locks debian/mailman/var/lock/mailman

	# link it back to /var/lib/mailman/locks
	dh_link var/lock/mailman var/lib/$(package)/locks

	dh_installlogrotate

	install -m 0644 debian/mm_cfg.py debian/mailman/usr/lib/mailman/Mailman/mm_cfg.py.dist

	rm debian/$(package)/usr/lib/$(package)/Mailman/mm_cfg.py
	dh_link etc/$(package)/mm_cfg.py \
		usr/lib/$(package)/Mailman/mm_cfg.py

	cp -a src/*.c src/*.h debian/mailman/usr/share/doc/$(package)/src
#	cp -a misc/*jpg misc/*.png debian/mailman/usr/share/doc/$(package)/images
	cp -a admin/www debian/mailman/usr/share/doc/$(package)/html
	for bin in $(binaries); \
		do dh_link usr/lib/$(package)/bin/$$bin usr/sbin/$$bin; done
	mv debian/mailman/usr/sbin/arch debian/mailman/usr/sbin/mmarch
	dh_installman
	dh_installinit
	dh_installdebconf
	dh_installexamples templates/* debian/mm_cfg.py \
		debian/mailman/usr/lib/$(package)/Mailman/Defaults.py
#	dh_installcron
	dh_strip
	dh_compress
	dh_fixperms
	chown -R root.root debian/mailman
	chown -R root.list \
		debian/mailman/{etc/$(package),var/lib/$(package),usr/lib/{$(package),cgi-bin/$(package)}}
	chown list.list debian/mailman/var/{lock/mailman,lib/mailman/qfiles,run/mailman}
	chown root.list debian/mailman/var/log/mailman
	find debian/mailman/var/lib/$(package) -type d | xargs chmod 2775
	find debian/mailman/var/lib/$(package)/messages -type d | xargs chmod 755

	# make lintian happy
	install -m 0644 debian/lintian-overrides debian/mailman/usr/share/lintian/overrides/mailman

# Install savannah plugin
	install -m 0644 debian/contrib/savannah debian/mailman/usr/lib/$(package)/Mailman/Cgi

# Spamassassin plugin
	install -m 0644 debian/contrib/SpamAssassin.py debian/mailman/usr/lib/$(package)/Mailman/Handlers
	install -m 0644 debian/contrib/spamd.py debian/mailman/usr/lib/$(package)/Mailman/Handlers

# postfix-to-mailman.py
	install -m 0755 debian/contrib/postfix-to-mailman.py debian/mailman/usr/share/mailman
	dh_link etc/mailman/postfix-to-mailman.py usr/lib/mailman/bin/postfix-to-mailman.py

# apache default config
	install -m 0644 debian/contrib/apache.conf debian/mailman/etc/mailman

# Move templates
	mv `find debian/mailman/etc/mailman -mindepth 1 -maxdepth 1 -type d` debian/mailman/usr/share/mailman
	cp build/contrib/qmail-to-mailman.py debian/mailman/usr/share/mailman

	find debian/mailman/usr/share/mailman -type f | sed 's,debian/mailman/usr/share/mailman,/etc/mailman,' > debian/ucffiles

	dh_link etc/mailman/qmail-to-mailman.py usr/lib/mailman/bin/qmail-to-mailman.py


# Fix permissions
	chmod +x debian/mailman/usr/lib/$(package)/Mailman/Cgi/*
#	chmod +x debian/mailman/usr/lib/$(package)/scripts/*
	chmod +x debian/mailman/usr/lib/$(package)/Mailman/Archiver/pipermail.py

	chmod g+s debian/mailman/usr/lib/cgi-bin/mailman/* \
		debian/mailman/usr/lib/mailman/mail/mailman

	chmod -x debian/mailman/usr/lib/$(package)/scripts/paths.py \
		debian/mailman/usr/lib/$(package)/Mailman/Cgi/*

	chmod o-x debian/mailman/var/lib/$(package)/archives/private
	chmod 0755 debian/mailman/usr/lib/$(package)/cron/*
	chmod 0644 debian/mailman/usr/lib/$(package)/cron/{crontab.in,paths.py}
	chmod 2775 debian/mailman/var/log/mailman
	chmod g+w debian/mailman/var/lock/mailman

	dh_installdeb

#	echo 'if [ "$$1" = purge ]; then' >> debian/mailman.postrm.ucf
#	for f in `cat debian/ucffiles`; do \
#		echo -e "\techo Removing $$f" >> debian/mailman.postrm.ucf; \
#		echo -e "\tucf --debconf-ok --purge $$f" >> debian/mailman.postrm.ucf ; \
#	done
#	echo 'fi' >> debian/mailman.postrm.ucf

#	echo 'if [ "$$1" = "configure" ]; then'>> debian/mailman.postinst.ucf
#	for dir in $$(for f in $$(cat debian/ucffiles); do dirname "$$f" ; done | sort | uniq); do echo -e "\tmkdir -p $$dir" >> debian/mailman.postinst.ucf ; done

#	echo -e "\techo -n 'Checking/installing config files (this takes time)': " >> debian/mailman.postinst.ucf
#	for f in `cat debian/ucffiles`; do \
#		echo -e "\techo -n ." >> debian/mailman.postinst.ucf ; \
#		echo -e "\tucf `echo $$f | sed s,/etc/mailman,/usr/share/mailman,` $$f < /dev/tty > /dev/tty" >> debian/mailman.postinst.ucf ; \
#	done
#	echo 'fi' >> debian/mailman.postinst.ucf
#	echo -e "\techo \" done!\"" >> debian/mailman.postinst.ucf

#	perl -pi -e '/#UCF#/ and do { open F, "debian/mailman.postinst.ucf"; local $$/ ; $$_ = <F> };' debian/mailman/DEBIAN/postinst
#	perl -pi -e '/#UCF#/ and do { open F, "debian/mailman.postrm.ucf"; local $$/ ; $$_ = <F> };' debian/mailman/DEBIAN/postrm

	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dpkg --build debian/mailman ..


define checkdir
	test -f debian/rules
endef

# Below here is fairly generic really

binary:		binary-indep binary-arch

checkroot:
	$(checkdir)
	dh_testroot

.PHONY: binary binary-arch binary-indep clean checkroot
