Description: fix information disclosure and denial of service via
 zend_restore_ini_entry_cb function.
Origin: upstream, http://svn.php.net/viewvc?view=revision&revision=284157
Origin: upstream, http://svn.php.net/viewvc?view=revision&revision=283946
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=540605

diff -Nur php5-5.2.4/main/main.c php5-5.2.4.new/main/main.c
--- php5-5.2.4/main/main.c	2010-01-06 09:37:58.000000000 -0500
+++ php5-5.2.4.new/main/main.c	2010-01-06 09:38:18.000000000 -0500
@@ -305,8 +305,7 @@
 static PHP_INI_MH(OnUpdateErrorLog)
 {
 	/* Only do the safemode/open_basedir check at runtime */
-	if ((stage == PHP_INI_STAGE_RUNTIME || stage == PHP_INI_STAGE_HTACCESS) &&
-		strcmp(new_value, "syslog")) {
+	if ((stage == PHP_INI_STAGE_RUNTIME || stage == PHP_INI_STAGE_HTACCESS) && new_value && strcmp(new_value, "syslog")) {
 		if (PG(safe_mode) && (!php_checkuid(new_value, NULL, CHECKUID_CHECK_FILE_AND_DIR))) {
 			return FAILURE;
 		}
diff -Nur php5-5.2.4/Zend/zend_ini.c php5-5.2.4.new/Zend/zend_ini.c
--- php5-5.2.4/Zend/zend_ini.c	2010-01-06 09:37:58.000000000 -0500
+++ php5-5.2.4.new/Zend/zend_ini.c	2010-01-06 09:38:18.000000000 -0500
@@ -46,15 +46,20 @@
 
 static int zend_restore_ini_entry_cb(zend_ini_entry *ini_entry, int stage TSRMLS_DC)
 {
+ 	int result = FAILURE;
 	if (ini_entry->modified) {
 		if (ini_entry->on_modify) {
 			zend_try {
 			/* even if on_modify bails out, we have to continue on with restoring,
 				since there can be allocated variables that would be freed on MM shutdown
 				and would lead to memory corruption later  ini entry is modified again */
-				ini_entry->on_modify(ini_entry, ini_entry->orig_value, ini_entry->orig_value_length, ini_entry->mh_arg1, ini_entry->mh_arg2, ini_entry->mh_arg3, stage TSRMLS_CC);
+ 				result = ini_entry->on_modify(ini_entry, ini_entry->orig_value, ini_entry->orig_value_length, ini_entry->mh_arg1, ini_entry->mh_arg2, ini_entry->mh_arg3, stage TSRMLS_CC);
 			} zend_end_try();
 		}
+ 		if(stage == ZEND_INI_STAGE_RUNTIME && result == FAILURE) {
+ 			/* runtime failure is OK */
+ 			return 1;
+ 		}
 		if (ini_entry->value != ini_entry->orig_value) {
 			efree(ini_entry->value);
 		}
