#! /bin/sh
# postinst script for pdns-backend-sqlite
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

# Configuration file
PDNSCONF=/etc/powerdns/pdns.conf
PDNSDIR=`cat $PDNSCONF | grep include | awk -F '=' '{print $2}'`
PDNSUSER=`cat $PDNSCONF | grep setuid | awk -F '=' '{print $2}'`
PDNSGROUP=`cat $PDNSCONF | grep setgid | awk -F '=' '{print $2}'`
DATABASE=/var/lib/powerdns/pdns.sqlite
PDNSLOCAL=$PDNSDIR/pdns.local

INITDATA="create table domains (
  id            INTEGER PRIMARY KEY,
  name          VARCHAR(255) NOT NULL,
  master                VARCHAR(20) DEFAULT NULL,
  last_check    INTEGER DEFAULT NULL,
  type          VARCHAR(6) NOT NULL,
  notified_serial   INTEGER DEFAULT NULL,
  account           VARCHAR(40) DEFAULT NULL
);

CREATE UNIQUE INDEX name_index ON domains(name);

CREATE TABLE records (
  id              INTEGER PRIMARY KEY,
  domain_id       INTEGER DEFAULT NULL,
  name            VARCHAR(255) DEFAULT NULL,
  type            VARCHAR(6) DEFAULT NULL,
  content         VARCHAR(255) DEFAULT NULL,
  ttl             INTEGER DEFAULT NULL,
  prio            INTEGER DEFAULT NULL,
  change_date     INTEGER DEFAULT NULL
);

CREATE INDEX rec_name_index ON records(name);
CREATE INDEX nametype_index ON records(name,type);
CREATE INDEX domain_id ON records(domain_id);

create table supermasters (
  ip          VARCHAR(25) NOT NULL,
  nameserver  VARCHAR(255) NOT NULL,
  account     VARCHAR(40) DEFAULT NULL
);"

update_permissions() {
  data="$1"
  if [ -d "$dir" ]; then
    if [ ! -z "$PDNSUSER" ]; then
      chown -R "$PDNSUSER" "$data"
    fi
    if [ ! -z "$PDNSGROUP" ]; then
      chgrp -R "$PDNSGROUP" "$data"
    fi
  fi
}

case "$1" in
  configure)
    if [ -f $PDNSLOCAL ]; then
      EXIST=`(cat $PDNSLOCAL | grep "gsqlite-database") || true`
      DATA=`echo $EXIST | awk -F '=' '{print $2}'`
    else
      EXIST=""
    fi

    if [ ! -z "$DATA" ]; then
      DATABASE=$DATA
    else
      if [ ! -d "/var/lib/powerdns" ]; then
        mkdir -m 0755 /var/lib/powerdns
      fi
    fi

    # Create initial database
    if [ ! -f $DATABASE ]; then
      echo -n "Generating sqlite database..."
      echo $INITDATA | sqlite $DATABASE
      echo "done"
    fi

    update_permissions "$DATABASE"
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

if [ -x "/etc/init.d/pdns" ]; then
  if [ -x /usr/sbin/invoke-rc.d ]; then
    invoke-rc.d pdns restart || exit $?
  else
    /etc/init.d/pdns restart || exit $?
  fi
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

