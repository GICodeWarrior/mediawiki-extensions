#! /bin/sh /usr/share/dpatch/dpatch-run
## 24-coss-rebuild-meta-key-length.dpatch by  <mark@hawthorn.knams.wikimedia.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad squid-2.6.12~/src/fs/coss/store_dir_coss.c squid-2.6.12/src/fs/coss/store_dir_coss.c
--- squid-2.6.12~/src/fs/coss/store_dir_coss.c	2007-03-26 08:13:10.000000000 +0000
+++ squid-2.6.12/src/fs/coss/store_dir_coss.c	2007-03-26 08:21:21.000000000 +0000
@@ -1299,21 +1299,33 @@
 		debug(47, 3) ("Size: %" PRINTF_OFF_T " (len %d)\n", *l, t->length);
 		break;
 	    case STORE_META_KEY:
-		assert(t->length == MD5_DIGEST_CHARS);
+		if (t->length != MD5_DIGEST_CHARS) {
+		    debug(47, 1) ("COSS: %s: stripe %d: offset %d has invalid STORE_META_KEY length. Ignoring object.\n", stripePath(SD), cs->rebuild.curstripe, j);
+		    goto nextobject;
+		}
 		xmemcpy(key, t->value, MD5_DIGEST_CHARS);
 		break;
 #if SIZEOF_SQUID_FILE_SZ == SIZEOF_SIZE_T
 	    case STORE_META_STD:
-		assert(t->length == STORE_HDR_METASIZE);
+		if (t->length != STORE_HDR_METASIZE) {
+		    debug(47, 1) ("COSS: %s: stripe %d: offset %d has invalid STORE_META_STD length. Ignoring object.\n", stripePath(SD), cs->rebuild.curstripe, j);
+		    goto nextobject;
+		}
 		xmemcpy(&tmpe.timestamp, t->value, STORE_HDR_METASIZE);
 		break;
 #else
 	    case STORE_META_STD_LFS:
-		assert(t->length == STORE_HDR_METASIZE);
+		if (t->length != STORE_HDR_METASIZE) {
+                    debug(47, 1) ("COSS: %s: stripe %d: offset %d has invalid STORE_META_STD_LFS length. Ignoring object.\n", stripePath(SD), cs->rebuild.curstripe, j);
+		    goto nextobject;
+		}
 		xmemcpy(&tmpe.timestamp, t->value, STORE_HDR_METASIZE);
 		break;
 	    case STORE_META_STD:
-		assert(t->length == STORE_HDR_METASIZE_OLD);
+		if (t->length != STORE_HDR_METASIZE_OLD) {
+                    debug(47, 1) ("COSS: %s: stripe %d: offset %d has invalid STORE_META_STD length. Ignoring object.\n", stripePath(SD), cs->rebuild.curstripe, j);
+		    goto nextobject;
+		}
 		{
 		    struct {
 			time_t timestamp;
