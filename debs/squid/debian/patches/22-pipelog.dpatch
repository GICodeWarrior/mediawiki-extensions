#! /bin/sh /usr/share/dpatch/dpatch-run
## pipelog.dpatch by  <tstarling@wikimedia.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Access logging to pipe

@DPATCH@

diff -ru squid-2.6.5/src/logfile.c squid-2.6.5-pipelog/src/logfile.c
--- squid-2.6.5/src/logfile.c	2007-01-16 17:37:20.000000000 +0000
+++ squid-2.6.5-pipelog/src/logfile.c	2007-01-16 17:34:33.000000000 +0000
@@ -35,6 +35,7 @@
 #include "squid.h"
 
 static void logfileWriteWrapper(Logfile * lf, const void *buf, size_t len);
+static void logfileOpenPipe(Logfile * lf);
 
 #if HAVE_SYSLOG
 
@@ -137,7 +138,10 @@
 	    lf->syslog_priority |= LOG_INFO;
     } else
 #endif
-    {
+    if (path[0] == '|') {
+	lf->flags.isipc = 1;
+	logfileOpenPipe(lf);
+    } else {
 	int fd = file_open(path, O_WRONLY | O_CREAT | O_TEXT);
 	if (DISK_ERROR == fd) {
 	    if (ENOENT == errno && fatal_flag) {
@@ -186,9 +190,17 @@
     int i;
     char from[MAXPATHLEN];
     char to[MAXPATHLEN];
-    assert(lf->path);
+
     if (lf->flags.syslog)
 	return;
+
+    if (lf->flags.isipc) {
+	file_close(lf->fd);
+	logfileOpenPipe(lf);
+	return;
+    }
+
+    assert(lf->path);
 #ifdef S_ISREG
     if (stat(lf->path, &sb) == 0)
 	if (S_ISREG(sb.st_mode) == 0)
@@ -302,3 +314,17 @@
 	return;
     fatalf("logfileWrite: %s: %s\n", lf->path, xstrerror());
 }
+
+/*
+ * Open a pipe for logging
+ */
+static void 
+logfileOpenPipe(Logfile * lf)
+{
+    const char *args[2];
+    args[0] = "(logger)";
+    args[1] = NULL;
+    if ( ipcCreate(IPC_FIFO,&(lf->path[1]),args,"logger",NULL,&(lf->fd),NULL) <= 0 ) {
+	fatalf("Cannot start log listener %s :s", lf->path, xstrerror());
+    }
+}
diff -ru squid-2.6.5/src/structs.h squid-2.6.5-pipelog/src/structs.h
--- squid-2.6.5/src/structs.h	2007-01-16 17:37:20.000000000 +0000
+++ squid-2.6.5-pipelog/src/structs.h	2007-01-16 16:46:59.000000000 +0000
@@ -2439,6 +2439,7 @@
     struct {
 	unsigned int fatal;
 	unsigned int syslog;
+	unsigned int isipc;
     } flags;
     int syslog_priority;
 };
