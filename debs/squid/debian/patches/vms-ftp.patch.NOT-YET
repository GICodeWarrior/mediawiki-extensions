diff -ruN squid-2.2.5.orig/src/ftp.c squid-2.2.5/src/ftp.c
--- squid-2.2.5.orig/src/ftp.c	Wed Sep 22 23:22:50 1999
+++ squid-2.2.5/src/ftp.c	Thu Jan  6 14:12:42 2000
@@ -461,6 +461,8 @@
 #define SCAN_FTP2       "%[0123456789:]"
 #define SCAN_FTP3       "%[0123456789]-%[0123456789]-%[0123456789]"
 #define SCAN_FTP4       "%[0123456789]:%[0123456789]%[AaPp]%[Mm]"
+#define SCAN_FTP5	"%s;%*d"
+#define SCAN_FTP6	"%[0123456789]-%s-%[0123456789]"
 
 static ftpListParts *
 ftpListParseParts(const char *buf, struct _ftp_flags flags)
@@ -468,6 +470,7 @@
     ftpListParts *p = NULL;
     char *t = NULL;
     const char *ct = NULL;
+    char *q;
     char *tokens[MAX_TOKENS];
     int i;
     int n_tokens;
@@ -598,6 +601,32 @@
 	    p->type = '-';
 	}
     }
+    /* try it as a VMS listing */
+    if (n_tokens > 3 && p->name == NULL &&
+	sscanf(tokens[0], SCAN_FTP5, sbuf) == 1 &&
+	/* FILENAME;ver */
+	sscanf(tokens[2], SCAN_FTP6, sbuf, sbuf, sbuf) == 3) {
+	/* 8-SEP-1998 */
+	if ((q = strstr(tokens[0], ".DIR;")) != NULL) {
+	    p->type = 'd';
+	    *q = 0;
+	} else {
+	    p->type = '-';
+	    p->size = atoi(tokens[1]);
+	}
+	snprintf(sbuf, 128, "%s %s", tokens[2], tokens[3]);
+	p->date = xstrdup(sbuf);
+	if ((p->name = xstrdup(tokens[0])) != NULL) {
+	    /* Lowercase name and remove version. */
+	    for (q = p->name; *q; q++) {
+		*q = tolower(*q);
+		    if (*q == ';') {
+			*q = 0;
+			break;
+		    }
+	    }
+	}
+    }
     for (i = 0; i < n_tokens; i++)
 	xfree(tokens[i]);
     if (p->name == NULL)
@@ -769,12 +798,14 @@
     char *sbuf;			/* NULL-terminated copy of buf */
     char *end;
     char *line;
+    char *p;
     char *s;
     char *t;
     size_t linelen;
     size_t usable;
     StoreEntry *e = ftpState->entry;
     int len = ftpState->data.offset;
+    int xx, is_vms = -1;
     /*
      * We need a NULL-terminated buffer for scanning, ick
      */
@@ -799,12 +830,32 @@
     for (; s < end; s += strcspn(s, crlf), s += strspn(s, crlf)) {
 	debug(9, 3) ("ftpParseListing: s = {%s}\n", s);
 	linelen = strcspn(s, crlf) + 1;
+	/* VMS splits listings of filenames > 19 characters over 2 lines. */
+	if (is_vms > 0 && linelen > 2 && s + linelen < end) {
+	    xx = 0;
+	    for (p = s; *p && *p != '\r'; p++) {
+		if (*p == ' ' || *p == '\t')
+		    break;
+		if (*p == ';') xx = 1;
+	    }
+	    if (*p == '\r' && xx) {
+		s[linelen - 3] = ' ';
+		s[linelen - 2] = ' ';
+		linelen = strcspn(s, crlf) + 1;
+	    }
+	}
 	if (linelen < 2)
 	    break;
 	if (linelen > 4096)
 	    linelen = 4096;
 	xstrncpy(line, s, linelen);
 	debug(9, 7) ("ftpParseListing: {%s}\n", line);
+	/* VMS doesn't print "total" but "\r\nANONYMOUS:[000000]\r\n" */
+	if (is_vms == 0 && sscanf(line, "%*s:[%d.%*s]", &xx) == 1) {
+	    is_vms = 1;
+	    continue;
+	}
+	if (is_vms < 0 && strncmp(line, crlf, 2) == 0) is_vms = 0;
 	if (!strncmp(line, "total", 5))
 	    continue;
 	t = ftpHtmlifyListEntry(line, ftpState);
