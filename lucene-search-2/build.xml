<?xml version="1.0" encoding="UTF-8"?>
<project name="LuceneSearch" default="alljar" basedir=".">
	<property file="build.properties"/>
        <property name="junit.class.dir" value="${test.dir}/classes"/>
	<property name="include" value="src/** lib/** sql/** test-data/** webinterface/** *-example *.txt
					lsearch* build.xml scripts/* VERSION configure build update
					resources/** test/** udplogger/**"/>
	<property name="include.src" value="src/** sql/** build.xml scripts/* webinterface/* VERSION
					    configure build update test/** udplogger/**"/>
	<property name="include.bin" value="*.log4j *.txt config.inc template/** udplogger/**"/>
	<property name="include.sh" value="configure build update lsearchd"/>

	<path id="classpath">
		<fileset dir="${lib.dir}" includes="*.jar"/>
		<file name="${jar.name}"/>
	</path>

	<target name="run">
		<java jar="${jar.name}" fork="yes">
			<sysproperty key="java.rmi.server.codebase" value="file://${basedir}/${jar.name}"/>
			<sysproperty key="java.rmi.server.hostname" value="${hostname}"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="makejar" depends="build">
		<jar destfile="${basedir}/${jar.name}">
			<manifest>
				<attribute name="Main-Class" value="org.wikimedia.lsearch.config.StartupManager"/>
				<attribute name="Class-Path" value="${jar.name} lib/xmlrpc-common-3.0.jar
								    lib/xmlrpc-client-3.0.jar lib/xmlrpc-server-3.0.jar
								    lib/commons-logging-1.1.jar lib/ws-commons-util-1.0.1.jar
								    lib/log4j-1.2.14.jar lib/lucene-core-2.3.jar
								    lib/lucene-analyzers.jar lib/snowball.jar lib/mwdumper.jar
								    lib/mysql-connector-java-3.0.17-ga-bin.jar"/>
			</manifest>
			<zipfileset dir="${dest.dir}" prefix="">
				<include name="org/**"/>
			</zipfileset>
		</jar>
	</target>

	<target name="alljar" depends="build" description="All-in-one jar">
		<jar jarfile="${jar.name}" compress="true">
			<manifest>
				<attribute name="Main-Class" value="org.wikimedia.lsearch.config.StartupManager" />
			</manifest>
			<fileset dir="bin" includes="org/**" />

			<!-- pack libraries as well -->
			<zipfileset src="lib/xmlrpc-common-3.0.jar" />
			<zipfileset src="lib/xmlrpc-client-3.0.jar" />
			<zipfileset src="lib/xmlrpc-server-3.0.jar" />
			<zipfileset src="lib/commons-logging-1.1.jar" />
			<zipfileset src="lib/ws-commons-util-1.0.1.jar" />
			<zipfileset src="lib/log4j-1.2.14.jar" />
			<zipfileset src="lib/lucene-core-2.3.jar" />
			<zipfileset src="lib/lucene-analyzers.jar" />
			<zipfileset src="lib/snowball.jar" />
			<zipfileset src="lib/mwdumper.jar" />
			<zipfileset src="lib/mysql-connector-java-3.0.17-ga-bin.jar" />

			<fileset dir="resources" includes="*/**" />
		</jar>
	</target>


	<target name="build" description="Compile classes">
		<mkdir dir="${dest.dir}"/>
                <javac srcdir="${src.dir}/org/" debug="on" encoding="UTF-8" includes="**/*.java" destdir="${dest.dir}/">
			<classpath refid="classpath"/>
		</javac>
	</target>

        <target name="clean-dist" description="Clean up the dist dir">
		<mkdir dir="${dist.dir}"/>
		<delete file="${dist.dir}/*.tar"/>
		<delete file="${dist.dir}/*.tar.gz"/>
        </target>

	<target name="pack" depends="clean-dist" description="Make tar.gz distribution">
		<tar tarfile="${dist.dir}/${pack.name}-${version}.tar">
			<tarfileset prefix="${pack.name}-${version}" dir="." includes="${include}"/>
		</tar>
		<gzip zipfile="${dist.dir}/${pack.name}-${version}.tar.gz" src="${dist.dir}/${pack.name}-${version}.tar"/>
		<delete file="${dist.dir}/${pack.name}-${version}.tar"/>
	</target>

	<target name="pack-src" depends="alljar, clean-dist" description="Make tar.gz distribution of only core source files">
		<tar tarfile="${dist.dir}/${src.name}-${version}.tar">
			<tarfileset prefix="${pack.name}-${version}" dir="." includes="${include.src}"/>
		</tar>

		<gzip zipfile="${dist.dir}/${src.name}-${version}.tar.gz" src="${dist.dir}/${src.name}-${version}.tar"/>
		<delete file="${dist.dir}/${src.name}-${version}.tar"/>
	</target>


	<target name="binary" depends="alljar, clean-dist" description="Make binary tar.gz distribution">
		<tar tarfile="${dist.dir}/${binary.name}-${version}.tar">
			<tarfileset prefix="${pack.name}-${version}" dir="." includes="${jar.name} ${include.bin}"
				    excludes="template/backup/**"/>
			<tarfileset prefix="${pack.name}-${version}" mode="755" dir="." includes="${include.sh}"/>
		</tar>

		<gzip zipfile="${dist.dir}/${binary.name}-${version}.tar.gz" src="${dist.dir}/${binary.name}-${version}.tar"/>
		<delete file="${dist.dir}/${binary.name}-${version}.tar"/>
	</target>

	<target name="test-build" depends="alljar" description="Compile the junit tests">
                <mkdir dir="${junit.class.dir}"/>
		<javac srcdir="${test.dir}" destdir="${junit.class.dir}">
                        <classpath>
                                <pathelement path="${java.class.path}"/>
				<pathelement location="${collector.dir}"/>
                                <pathelement path="${jar.name}"/>
			</classpath>
		</javac>
	</target>

	<target name="test" depends="test-build">
		<property name="collector.dir" value="${test.dir}"/>

		<junit haltonerror="false" haltonfailure="false" printsummary="yes"
                       errorProperty="tests.failed" failureproperty="tests.failed">
                        <classpath>
                                <pathelement path="${java.class.path}"/>
                                <pathelement location="${junit.class.dir}"/>
				<pathelement location="${collector.dir}"/>
                                <pathelement path="${jar.name}"/>
			</classpath>

			<batchtest fork="yes" todir="${collector.dir}">
				<fileset dir="${collector.dir}" includes="**/*.java"/>
				<formatter type="plain" usefile="false"/>
			</batchtest>
		</junit>
                <fail if="tests.failed" message="Test(s) failed."/>
	</target>

        <target name="clean"
                description="Destroys all generated files and dirs.">
                <delete dir="${dest.dir}"/>
                <delete dir="${dist.dir}"/>
                <delete dir="${junit.class.dir}"/>
                <delete dir="dumps"/>
                <delete dir="indexes"/>
                <delete file="${basedir}/${jar.name}"/>
                <delete file="lsearch.log4j"/>
                <delete file="lsearch-global.conf"/>
                <delete file="lsearch.conf"/>
                <delete file="config.inc"/>
        </target>
</project>
