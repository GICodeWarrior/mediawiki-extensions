# @(#) $Header$

AC_INIT(loreley, 1.0-cvs, river@attenuate.org)

USER_CXXFLAGS="$CXXFLAGS"
CPPFLAGS="-D_REENTRANT $CPPFLAGS"
AC_CONFIG_HEADER(src/include/autoconf.h)

echo ""
echo "examining environment..."
AC_LANG(C++)
AC_PROG_CC
AC_PROG_CXX

if test x${ac_compiler_gnu} = xyes; then
	debug_cxxflags=$debug_cxxflags_gcc
	prod_cxxflags=$prod_cxxflags_gcc
fi

issun=no
AC_MSG_CHECKING(whether we are using the SunPro C compiler)
if $CC -V 2>&1 | grep "Sun C" >/dev/null; then
	AC_MSG_RESULT(yes)
	issun=yes
	debug_cxxflags=$debug_cxxflags_sunpro
	prod_cxxflags=$prod_cxxflags_sunpro
else
	AC_MSG_RESULT(no)
fi

testflag() {
	AC_MSG_CHECKING([whether $CXX supports $1])
	touch test.cc
	if test -z "`$CXX -c $1 test.cc 2>&1`"; then
		extraflags="$extraflags $1"
		AC_MSG_RESULT(yes)
	else
		AC_MSG_RESULT(no)
	fi
	rm -f test.cc test.o
}

if test "x$issun" = xyes; then
	testflag -library=stlport4
	testflag -mc
	testflag -errtags
fi

testflag -Wextra
testflag -Wall
testflag -Wno-unused
testflag -g
testflag -mt
dnl testflag -Weffc++ 
testflag -Woverloaded-virtual 
testflag -Wformat=2 
testflag -Winit-self 
testflag -Wswitch-enum 
dnl testflag -Wshadow 
testflag -Wpointer-arith 
#testflag -Wcast-qual 
testflag -Wcast-align 
testflag -Wwrite-strings 
testflag -Wredundant-decls 
dnl testflag -Wunreachable-code

AC_PROG_CPP
AC_PROG_CXXCPP
AC_MSG_CHECKING([for Intel C/C++ compiler])
AC_PREPROC_IFELSE([
#ifndef __INTEL_COMPILER
# error not Intel
#endif
], [
AC_MSG_RESULT(yes)
isicc=yes], [
AC_MSG_RESULT(no)
isicc=no])

PCHHDR=""
AC_ARG_ENABLE(pch, AC_HELP_STRING([--enable-pch],[Use GCC or Intel C/C++ precompiled headers]),
	[
if test "x$isicc" = xno; then
	PCHHDR="stdinc.h.gch"
else
	CPPFLAGS="$CPPFLAGS -pch"
fi],[PCHHDR=""])
AC_SUBST(PCHHDR)

AC_ARG_ENABLE(debug, AC_HELP_STRING([--enable-debug],[Compile with debug support]),
[	if test $enableval = yes; then
		AC_DEFINE([LORELEY_DEBUG], [], [Compile with debug support])
		testflag -xs
		testflag -xO0
		testflag -ggdb
	else
		testflag -O3
		testflag -fast
		testflag -xdepend=yes
		testflag -xipo=2
		testflag -xalias_level=std
	fi
])

if test -z "$USER_CXXFLAGS"; then
	USE_CXXFLAGS="$mycxxflags $extraflags"
else
	USE_CXXFLAGS=$USER_CXXFLAGS
fi

echo "using CXXFLAGS: $USE_CXXFLAGS"

AC_PROG_INSTALL
AC_MAKE_INCLUDE
AC_PROG_YACC
AC_PROG_LEX

dependstyle=null

AC_CHECK_PROG(have_makedepend, makedepend, yes, no)
if test x$have_makedepend = xyes; then
	dependstyle=makedepend
fi

AC_MSG_CHECKING(if $CC supports -xM1)
cat >conftest.c <<eof
#include "conftest.h"
eof
touch conftest.h

if $CC -xM1 conftest.c >/dev/null 2>&1; then
	AC_MSG_RESULT(yes)
	dependstyle=dashM
	dashMflag=-xM1
	AC_SUBST(dashMflag)
else
	AC_MSG_RESULT(no)
fi

rm -f conftest.c conftest.h

AC_MSG_CHECKING(if $CC supports -MM)
cat >conftest.c <<eof
#include "conftest.h"
eof
touch conftest.h

if $CC -MM conftest.c >/dev/null 2>&1; then
	AC_MSG_RESULT(yes)
	dependstyle=dashM
	dashMflag=-MM
	AC_SUBST(dashMflag)
else
	AC_MSG_RESULT(no)
fi

rm -f conftest.c conftest.h

AC_MSG_CHECKING([for GNU make])
if `make --version 2>&1 | grep '^GNU Make' >/dev/null`; then
        AC_MSG_RESULT(yes)
        M_FLAGS=--no-print-directory
else
        AC_MSG_RESULT(no)
        M_FLAGS=""
fi
AC_SUBST(M_FLAGS)

AC_SUBST(dependstyle)

AC_ARG_WITH(boost, AC_HELP_STRING([--with-boost=PATH],[path to Boost headers]),[
	CPPFLAGS="$CPPFLAGS -I${withval}"],)
AC_ARG_WITH(libevent, AC_HELP_STRING([--with-libevent=PATH],[prefix where libevent is installed]),[
	CPPFLAGS="$CPPFLAGS -I${withval}/include" LDFLAGS="$LDFLAGS -L${withval}/lib"],)
AC_ARG_WITH(zlib, AC_HELP_STRING([--with-zlib=PATH],[prefix where zlib is installed]),[
	CPPFLAGS="$CPPFLAGS -I${withval}/include" LDFLAGS="$LDFLAGS -L${withval}/lib"],)
AC_ARG_WITH(bdb, AC_HELP_STRING([--with-bdb=PATH],[prefix where Oracle Berkeley DB is installed]),[
	CPPFLAGS="$CPPFLAGS -I${withval}/include" LDFLAGS="$LDFLAGS -L${withval}/lib"],)
solio=no
AC_ARG_ENABLE(solaris-io, AC_HELP_STRING([--enable-solaris-io],[enable Solaris 10 (or greater) specific I/O mechanism]),
	[
if test "$enableval" = "yes"; then
	AC_DEFINE([SOLARIS_IO], [], [Use Solaris-specific I/O mechanism])
	solio=yes
fi
],[])
AC_ARG_ENABLE(allocators,
	AC_HELP_STRING([--disable-allocators],[disable built-in optimised allocators]),
	[
if test "$enableval" = "no"; then
	AC_DEFINE([DISABLE_ALLOCS], [], [Don't use ptalloc or flalloc])
fi
],[])

echo ""
echo "looking for required C functions..."
AC_SEARCH_LIBS(socket, socket)
AC_SEARCH_LIBS(inet_addr, nsl)
AC_SEARCH_LIBS(log10, m)
AC_SEARCH_LIBS(sendfile, sendfile)
AC_SEARCH_LIBS(zlibVersion, z,,AC_MSG_ERROR([zlib not found]))
AC_SEARCH_LIBS(pthread_key_create, pthread)
if test "$solio" = "no"; then
	AC_SEARCH_LIBS(event_add, event,,AC_MSG_ERROR([libevent not found (maybe you need --with-libevent)]))
fi
AC_SEARCH_LIBS(db_create, db-4.5 db-4.4 db-4.3 db-4.2,,AC_MSG_ERROR([Berkeley DB not found]))

AC_CHECK_TYPES([u_int8_t, u_int16_t, u_int32_t, u_int64_t])

AC_CHECK_FUNC(strlcat,AC_DEFINE([HAVE_STRLCAT],,[Define this if you have strlcat()]),[AC_LIBOBJ(strlcat)])
AC_CHECK_FUNC(strlcpy,AC_DEFINE([HAVE_STRLCPY],,[Define this if you have strlcpy()]),[AC_LIBOBJ(strlcpy)])
AC_CHECK_FUNC(sendfile,AC_DEFINE([HAVE_SENDFILE],,[Define this if you have sendfile()]))
AC_CHECK_FUNC(daemon,AC_DEFINE([HAVE_DAEMON],,[Define this if you have daemon()]),[AC_LIBOBJ(daemon)])
AC_CHECK_FUNC(setproctitle,AC_DEFINE([HAVE_SETPROCTITLE],,[Define this if you have setproctitle()]))
AC_CHECK_TYPE(socklen_t, AC_DEFINE([HAVE_SOCKLEN_T],,[Define this if you have socklen_t]),,[#include <sys/socket.h>])
AC_CHECK_HEADER([sys/queue.h],AC_DEFINE([HAVE_SYS_QUEUE_H],,[Define this if you have <sys/queue.h]))
AC_CHECK_HEADER([sys/sendfile.h],AC_DEFINE([HAVE_SYS_SENDFILE_H],,[Define this if you have <sys/sendfile.h>]))
AC_CHECK_HEADER([zlib.h],,AC_MSG_ERROR([zlib not found]))

test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

datadir="${datadir}/loreley"
CXXFLAGS="$USE_CXXFLAGS"

PATH_LIBEXECDIR=`eval echo $libexecdir`
PATH_DATADIR=`eval echo $datadir`
PATH_SYSCONFDIR=`eval echo $sysconfdir`

AC_DEFINE_UNQUOTED([LIBEXECDIR], ["$PATH_LIBEXECDIR"], [Path to libexec dir])
AC_DEFINE_UNQUOTED([DATADIR], ["$PATH_DATADIR"], [Path to data dir])
AC_DEFINE_UNQUOTED([SYSCONFDIR], ["$PATH_SYSCONFDIR"], [Path to sysconf dir])

AC_OUTPUT(
	mk/prog.mk 
	mk/lib.mk
	mk/vars.mk 
	mk/rules.mk 
	mk/data.mk 
	mk/subdir.mk
	mk/depend.dashM.mk 
	mk/depend.makedepend.mk 
	mk/depend.null.mk
	mk/Makefile
	Makefile 
	src/Makefile 
	src/include/Makefile
	src/libloreley/Makefile
	src/loreley/Makefile
	src/lreadlog/Makefile
	src/lgetstats/Makefile
	src/lhtcp/Makefile
	errors/Makefile)
