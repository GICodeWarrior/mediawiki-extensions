
== Adding new metrics ==

Create a new file in the metrics folder with the name of your new metric, append "Metric" to the name.
e.g. If your metric is BalloonsPerWikipedian, make the file BalloonsPerWikipedia.php, this will also be your class name

svn propset svn:eol-style native BalloonsPerWikipedianMetric.php
svn propset svn:keywords Id BalloonsPerWikipedianMetric.php

File contents:
<source lang="php">
<?php

class BalloonsPerWikipedianMetric extends ApiAnalyticsBase {

	public function getAllowedFilters() {
		return array(
			'selectregions',
			'selectcountries',
		);
	}

	protected function getQueryInfo() {
		return array(
			'table' => array(),
			'conds' => array(),
			'options' => array(),
			'join_conds' => array(),
		);
	}

	protected function getQueryFields() {
		return array();
	}

	public function getDescription() {
		return 'Wikipedians like balloons, right?';
	}

	public function getVersion() {
		return __CLASS__ . ': $Id: $';
	}
}
</source>

Then to the bottom of MetricsReport.php, add:

<source lang="php">
$wgAutoloadClasses['CLASSNAME'] = $metricsDir . 'CLASSNAME.php';
$wgMetricAPIModules['metricname'] = 'CLASSNAME';
</source>

CLASSNAME is BalloonsPerWikipedianMetric etc. For the "metricname", this is how it will be identified in the API.
