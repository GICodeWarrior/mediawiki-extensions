Index: maintenance/updaters.inc
===================================================================
--- maintenance/updaters.inc	(revision 53499)
+++ maintenance/updaters.inc	(working copy)
@@ -884,7 +884,7 @@
  * @bug 3946
  */
 function do_page_random_update() {
-	global $wgDatabase;
+	/*global $wgDatabase;
 
 	wfOut( "Setting page_random to a random value on rows where it equals 0..." );
 
@@ -892,7 +892,7 @@
 	$wgDatabase->query( "UPDATE $page SET page_random = RAND() WHERE page_random = 0", 'do_page_random_update' );
 	$rows = $wgDatabase->affectedRows();
 
-	wfOut( "changed $rows rows\n" );
+	wfOut( "changed $rows rows\n" );*/
 }
 
 function do_templatelinks_update() {
@@ -1211,7 +1211,7 @@
 }
 
 function do_category_population() {
-	if( update_row_exists( 'populate category' ) ) {
+	/*if( update_row_exists( 'populate category' ) ) {
 		wfOut( "...category table already populated.\n" );
 		return;
 	}
@@ -1221,7 +1221,7 @@
 "may want to hit Ctrl-C and do this manually with maintenance/\n".
 "populateCategory.php.\n";
 	populateCategory( '', 10, 0, true );
-	wfOut( "Done populating category table.\n" );
+	wfOut( "Done populating category table.\n" );*/
 }
 
 function do_populate_parent_id() {
Index: includes/Article.php
===================================================================
--- includes/Article.php	(revision 53499)
+++ includes/Article.php	(working copy)
@@ -725,10 +725,29 @@
 	public function view() {
 		global $wgUser, $wgOut, $wgRequest, $wgContLang;
 		global $wgEnableParserCache, $wgStylePath, $wgParser;
-		global $wgUseTrackbacks;
+		global $wgUseTrackbacks, $wgNamespaceRobotPolicies, $wgArticleRobotPolicies, $wgTitle;
+		global $wgDefaultRobotPolicy;
 
 		wfProfileIn( __METHOD__ );
 
+		global $wdHandlerClasses, $wdHandlerPath;
+		$ns = $this->mTitle->getNamespace();
+		if( array_key_exists( $ns, $wdHandlerClasses ) ) {
+		$handlerClass = $wdHandlerClasses[ $ns ];
+			$handlerFile = $wdHandlerPath . $handlerClass . '.php';
+			if( file_exists( $handlerFile ) ) {
+                        	require_once $handlerFile;
+	                        $handlerInstance = new $handlerClass();
+        	                $handlerInstance->view();
+				return;
+			} else {
+				$wgOut->showErrorPage( 'namespace_handler_not_found', 'namespace_handler_not_found_error',
+				$handlerFile, $wgContLang->getFormattedNsText( $ns ) );
+			}
+                }
+
+		$parserCache = ParserCache::singleton();
+
 		# Get variables from query string
 		$oldid = $this->getOldID();
 		$parserCache = ParserCache::singleton();
Index: includes/SearchEngine.php
===================================================================
--- includes/SearchEngine.php	(revision 53499)
+++ includes/SearchEngine.php	(working copy)
@@ -63,7 +63,7 @@
 	 * @return Title
 	 */
 	public static function getNearMatch( $searchterm ) {
-		global $wgContLang;
+		global $wgContLang, $wgDefaultGoPrefix;
 
 		$allSearchTerms = array($searchterm);
 
@@ -88,6 +88,16 @@
 				return $title;
 			}
 
+			# Attempt search with default go prefix.
+			if( !empty($wgDefaultGoPrefix) && $title->getNamespace() == NS_MAIN ) {
+				$term = $wgDefaultGoPrefix . $term;
+				$title = Title::newFromText( $term );
+				if( $title->exists() ) {
+					return $title;
+				}
+			}
+
+
 			# Now try all lower case (i.e. first letter capitalized)
 			#
 			$title = Title::newFromText( $wgContLang->lc( $term ) );
Index: includes/EditPage.php
===================================================================
--- includes/EditPage.php	(revision 53499)
+++ includes/EditPage.php	(working copy)
@@ -400,6 +400,24 @@
 			wfProfileOut( __METHOD__ );
 			return;
 		} else {
+
+			global $wdHandlerClasses, $wdHandlerPath;
+			$namespaceId = $this->mTitle->getNamespace();
+	                if( array_key_exists( $namespaceId, $wdHandlerClasses ) ) {
+				$handlerClass = $wdHandlerClasses[ $namespaceId ];
+				$handlerFile = $wdHandlerPath . $handlerClass . '.php';
+				if( file_exists( $handlerFile ) ) {
+					require_once $handlerFile;
+					$handlerInstance = new $handlerClass();
+					$handlerInstance->edit();
+					return;
+				} else {
+					$wgOut->showErrorPage( 'namespace_handler_not_found', 'namespace_handler_not_found_error',
+					$handlerFie, $wgContLang->getFormattedNsText( $namespaceId ) );
+				}
+			}
+
+
 			if ( $this->save ) {
 				$this->formtype = 'save';
 			} else if ( $this->preview ) {
Index: includes/Namespace.php
===================================================================
--- includes/Namespace.php	(revision 53499)
+++ includes/Namespace.php	(working copy)
@@ -52,7 +52,9 @@
 	 * @return bool
 	 */
 	public static function isMovable( $index ) {
-		global $wgAllowImageMoving;
+		global $wgAllowImageMoving, $wdHandlerClasses;
+		# FIXME: This means that namespaces with custom handlers are assumed to never be movable.
+		if( array_key_exists( $index, $wdHandlerClasses ) ) return false; 
 		return !( $index < NS_MAIN || ($index == NS_FILE && !$wgAllowImageMoving)  || $index == NS_CATEGORY );
 	}
 
Index: includes/SkinTemplate.php
===================================================================
--- includes/SkinTemplate.php	(revision 53499)
+++ includes/SkinTemplate.php	(working copy)
@@ -749,10 +749,11 @@
 			wfProfileIn( __METHOD__ . '-live' );
 			if ( $this->mTitle->exists() ) {
 
+				wfRunHooks( 'GetHistoryLinkTrail', array( &$trail ) );
 				$content_actions['history'] = array(
 					'class' => ($action == 'history') ? 'selected' : false,
 					'text' => wfMsg( 'history_short' ),
-					'href' => $this->mTitle->getLocalUrl( 'action=history' ),
+					'href' => $this->mTitle->getLocalUrl( 'action=history'  . $trail ),
 					'rel' => 'archives',
 				);
 
Index: includes/DefaultSettings.php
===================================================================
--- includes/DefaultSettings.php	(revision 53499)
+++ includes/DefaultSettings.php	(working copy)
@@ -3945,6 +3945,12 @@
  */
 $wgPasswordAttemptThrottle = array( 'count' => 5, 'seconds' => 300 );
 
+/*
+ * Prefix to be added before "Go" searches, e.g. point to a different
+ * namespace.
+ */
+$wgDefaultGoPrefix = '';
+
 /**
  * Display user edit counts in various prominent places.
  */
Index: includes/PageHistory.php
===================================================================
--- includes/PageHistory.php	(revision 53499)
+++ includes/PageHistory.php	(working copy)
@@ -77,6 +77,22 @@
 
 		wfProfileIn( __METHOD__ );
 
+		global $wdHandlerClasses, $wdHandlerPath;
+		$namespaceId = $this->mTitle->getNamespace();
+		if( array_key_exists( $namespaceId, $wdHandlerClasses ) ) {
+		$handlerClass = $wdHandlerClasses[ $namespaceId ];
+			$handlerFile = $wdHandlerPath . $handlerClass . '.php';
+			if( file_exists( $handlerFile ) ) {
+                        	require_once $handlerFile;
+	                        $handlerInstance = new $handlerClass();
+        	                $handlerInstance->history();
+				return;
+			} else {
+				$wgOut->showErrorPage( 'namespace_handler_not_found', 'namespace_handler_not_found_error',
+				$handlerFile, $wgContLang->getFormattedNsText( $namespaceId ) );
+			}
+                }
+
 		/*
 		 * Setup page variables.
 		 */
Index: includes/Skin.php
===================================================================
--- includes/Skin.php	(revision 53499)
+++ includes/Skin.php	(working copy)
@@ -1650,6 +1650,10 @@
 	function editUrlOptions() {
 		global $wgArticle;
 
+		$trail = '';
+		wfRunHooks( 'GetEditLinkTrail', array( &$trail ) );
+		# FIXME: $trail should be appended to $return but that is now an array.
+
 		$options = array( 'action' => 'edit' );
 
 		if( $this->mRevisionId && ! $wgArticle->isCurrent() ) {
@@ -1749,6 +1753,10 @@
 	}
 
 	function historyLink() {
+		$trail = '';
+		wfRunHooks( 'GetHistoryLinkTrail', array( &$trail ) );
+		# FIXME: $trail should be appended to $return but that is now an array.
+
 		return $this->link(
 			$this->mTitle,
 			wfMsgHtml( 'history' ),
@@ -2086,4 +2094,4 @@
 	public function commonPrintStylesheet() {
 		return true;
 	}
-}
\ No newline at end of file
+} 
