{	{extension
|name=BugzillaReports
|author=[[User:Ian Homer|Ian Homer]]
|type=parser function
|version=0.8
|update=July 4, 2008
|status=beta
|mediawiki=1.12
|description=Generate bugzilla reports
|download=[http://blog.bemoko.com/bugzillareports/ BugzillaReports]
}}
'''BugzillaReports''' generates great looking reports from [[Bugzilla]] which you can include in your [[MediaWiki]] pages. Great to provide access to Bugzilla info, either from an access control point of view or providing reports easier for non-techies to read. Supports interactions with voting & flagging and helps you to see what needs to be done next. It's like your controlled window onto Bugzilla ...
[[Category:Bugzilla]]

=Installation=

# Download the extension bundle from [http://blog.bemoko.com/bugzillareports/ BugzillaReports]
# Unpack bundle into your '''extensions''' directory.  This should give you
#: BugzillaReports/BugzillaReports.i18n.php
#: BugzillaReports/BugzillaReports.php
#: BugzillaReports/skins/bz_main.css
#: etc

Add the following to your LocalSettings.php file:

<source lang="php">
require_once("$IP/extensions/BugzillaReports/BugzillaReports.php");
$wgBugzillaReports = array(
	'database'	=> "bugzilla",
	'user'		=> "user",
	'password'	=> "(your password)",
	'bzserver'     => "http://host"
);
</source>

or if you want to use [[interwiki]] links

<source lang="php">
...
	'interwiki'     => "bugzilla"
...
</source>

where parameters are defined as follows:

# '''host''' &rArr; defaults to localhost, but if Bugzilla not on same machine as your mediawiki install then set the hostname here
# Use one of
## '''bzserver''' &rArr; point to bugzilla server e.g. http://host".  Note that the path "/show_bug.cgi?id=" is automatically added for you by the extension
## '''interwiki''' &rArr; [[interwiki]] prefix linking to bugzilla instance
##: For example set up interwiki prefix of '''bugzilla''' to point to URL http://host/show_bug.cgi?id=$1
# '''maxrows''' &rArr; set maximum number of rows to display (defaults to 200)

=Example Output=

[[Image:bugzilla-reports-screenshot3.png|Bugzilla Report]]

Note that the bubble appears as you roll over a bug that has a last comment set.

=Usage=

==By Example==
Generate a report from Bugzilla based on search criteria, e.g.

[[Image:bugzilla-reports-screenshot1.png|Bugzilla Report|right]]

List all open bugs - note that status defaults to NEW,ASSIGNED,UNCONFIRMED,REOPENED and maximum of 200 rows (by default) are returned. Results are sorted by priority.

<source lang="php">
{{#bugzilla:}}
</source>

Report on P3 and higher bugs

<source lang="php">
{{#bugzilla:
  |priority=P1,P2,P3
}}
</source>

Report on a particular product

<source lang="php">
{{#bugzilla:
  |product=myproduct
  |version=1.3
  |lastcomment=1
}}
</source>

Report on specific bug ids
<source lang="php">
{{#bugzilla:id=30,56,78,93}}
</source>

[[Image:bugzilla-reports-screenshot2.png|Last Comment Bubbles|right]]
Report on all enhancements with the text wiki in the summary with last comment bubbles

<source lang="php">
{{#bugzilla:
  |search=wiki
  |severity=enhancement
  |header=hide
  |lastcomment=1
}}
</source>

Setting the '''lastcomment''' parameter will generate a report which renders the last comment in bundles in bubbles as you hover each row (see image left)  This has been tested on Firefox 3 and Safari 3, but this option may have issues with other and older browser.  I'd be happy to hear feedback on this feature.

Report on all bugs that are not new

<source lang="php">
{{#bugzilla:status=!NEW}}
</source>

Everything except P1 and P2 bugs

<source lang="php">
{{#bugzilla:
  |priority=!(P1,P2)
  |status=*
}}
</source>

Set the message when no results are returned

<source lang="php">
{{#bugzilla:
  |product=doesntexist
  |noresultsmessage=all tasks complete
}}
</source>

Tasks with votes against them

<source lang="php">
{{#bugzilla:columns=+votes|votes=+}}
</source>

[[Image:bugzilla-reports-screenshot4.png]]

<source lang="php">
{{#bugzilla
  |group=deadline
  |groupformat=radar
}}
</source>

[[Image:bugzilla-reports-screenshot5.png]]

<source lang="php">
{{#bugzilla
  |group=version
  |bar=status
}}
</source>

All tasks created by me but not assigned to me

<source lang="php">
{{#bugzilla:columns=+to|from=me@bemoko.com|to=!me@bemoko.com}}
</source>

All tasks I'm cc'd on but not created by me and not assigned to me

<source lang="php">
{{#bugzilla:columns=+to,+from
  |to=!me@bemoko.com
  |from=!me@bemoko.com
  |cc=me@bemoko.com}}
</source>

===Task Radar===

<source lang="php">
{{task radar|me@bemoko.com}}
</source>

where task radar is defined as:

<source lang="php">
=Flagged=
{{#bugzilla:flag={{{1}}}|lastcomment=1|noresultsmessage=No tasks flagged}}
=Up & Coming=
{{#bugzilla:to={{{1}}}|columns=-version,+deadline|deadline=+|group=deadline|groupformat=radar|lastcomment=1|noresultsmessage=Nothing up & coming}}
=My Product Priority Radar=
{{#bugzilla:to={{{1}}}|lastcomment=1|product=myproduct|noresultsmessage=Nothing to do on myproduct}}
=Voted Tasks=
{{#bugzilla:to={{{1}}}|columns=+deadline|group=product|votes=+|noresultsmessage=None of your tasks have received votes}}
=Raised=
{{#bugzilla:from={{{1}}}|to=!{{{1}}}|noresultsmessage=You have not raised anything}}
=CC=
{{#bugzilla:to=!{{{1}}}|from=!{{{1}}}|cc={{{1}}}|noresultsmessage=No ccs}}
=Other Priority Radar=
{{#bugzilla:to={{{1}}}|product=!myproduct|group=product|noresultsmessage=Nothing else to do}}
</source>

==Parameter Usage==

{| style="-moz-border-radius:8px;border: 1px solid #f0f0f0;border-spacing:0px;width: 80%;margin:auto"
|- style="vertical-align:top; background-color: #c0c0c0;"
! parameter
! style="width:30%" |values
! description
|- style="vertical-align:top;"
| '''bar'''
| column name
| field to summarise in a bar chart - note that this also works in conjunction with the group parameter to provide a set of bar charts.
|- style="vertical-align:top; background-color: #f0f0f0;"
| '''cc'''
|  single username
| Query for any task cc'd to the specified username, only supports single value
|- style="vertical-align:top;"
| '''columns'''
|  id, cc, deadline, modified, priority, product, severity, status, summary, to, version
| comma separated list of columns to display in the specified order
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''debug'''
| ''anything''
| Set to enable debugging - outputs SQL at end of table
|- style="vertical-align:top;"
| '''component'''
| component name
| component query field
|- style="vertical-align:top; background-color: #f0f0f0;"
| '''detailsrow'''
| ''same as values for columns''
| comma separated list of columns to display in the specified order on a second row
|- style="vertical-align:top;"
| '''flag'''
| username, e.g. me@bemoko.com
| search for all tasks flag for the specified user
|- style="vertical-align:top;"
| '''from'''
| username, e.g. me@bemoko.com
| reported by query field
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''group'''
| any column name as described in the columns field
| field to group report on
|- style="vertical-align:top;"
| '''groupformat'''
| radar (headings set to relative date names, e.g. today, tomorrow, next week)
| format to be applied to group headings
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''header'''
| hide
| Set to '''"hide"''' to hide the header row
|- style="vertical-align:top;"
| '''id'''
| ''bugzilla id''
| ID query field
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''lastcomments'''
| 1
| display the last comment for each bug
|- style="vertical-align:top;"
| '''maxrows'''
| any integer less than that configure in the LocalSettings.php configuration
| Maximum number of rows to return
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''noresultsmessage'''
| any text messag
| Set the message when there are no results matching the query
|- style="vertical-align:top;"
| '''order'''
| desc (or asc)
| sort order, defaults to asc
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''priority'''
| P1,P2,P3,P4,P5
| priority query field
|- style="vertical-align:top;"
| '''product'''
| ''bugzilla product names''
| product name query field
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''search'''
| ''anything''
| free text search - only searches short_desc at the moment
|- style="vertical-align:top;"
| '''severity'''
| blocker, critical, major, normal, minor, trivial, enhancement
| severity query field
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''sort'''
| any column name (or comma separated list of column names) as described in the columns field
| field to sort on
|- style="vertical-align:top;"
| '''status'''
| NEW,ASSIGNED,UNCONFIRMED,REOPENED,RESOLVED,VERIFIED,CLOSED
| status query field, note that this defaults to !CLOSED
|- style="vertical-align:top;background-color: #f0f0f0;"
| '''to'''
| a valid username, e.g. me@bemoko.com
| assigned to query field
|- style="vertical-align:top;"
| '''version'''
| ''bugzilla version name/number''
| version query field
|}


All query fields can take the following constructs

* value - single value to match
* value1,value2, value3 - comma separate list of value to match
* !value - match on everything except value
* !(value1, value2, value3) - match on everything except the listed values
* "*" - match on everything (useful to override inbuilt default of status)
* "+" - match on not null
* "-" - match on not set

==With Semantic MediaWiki==

This extension works well with the [http://semantic-mediawiki.org/wiki/Semantic_MediaWiki Semantic MediaWiki] by

# tagging your page with a property, e.g. <nowiki>[[task::52]]</nowiki>
# and then passing the results of semantic search into the bugzilla reports function, e.g.

<nowiki>{{#bugzilla:|headers=hide|id={{#ask: [[{{PAGENAME}}]] [[task::+]] | ? task | link=none | headers=hide}}}}</nowiki>