<program> ::= <stmts>
<stmts> ::= <stmts> <stmt> | <stmt>

<stmt> ::= <expr> semicolon
<stmt> ::= if leftbracket <expr> rightbracket <stmt>
<stmt> ::= if leftbracket <expr> rightbracket <stmt> else <stmt>
<stmt> ::= for leftbracket  <lvalue> in <expr> rightbracket <stmt>
<stmt> ::= try <stmt> catch leftbracket <lvalue> rightbracket <stmt>
<stmt> ::= leftcurly <stmts> rightcurly

<expr> ::= <exprSet>
<exprSet> ::= <lvalue> setto <exprSet> | <exprTrinary>
<exprTrinary> ::= <exprLogical> trinary <exprTrinary> colon <exprTrinary> | <exprLogical>
<exprLogical> ::= <exprLogical> logicop <exprCompare> | <exprCompare>
<exprCompare> ::= <exprCompare> compareop <exprEquals> | <exprEquals>
<exprEquals> ::= <exprSum> equalsto <exprSum> | <exprSum>
<exprSum> ::= <exprSum> sum <exprMul> | <exprMul>
<exprMul> ::= <exprMul> mul <exprPow> | <exprPow>
<exprPow> ::= <exprInvert> pow <exprPow> | <exprInvert>
<exprInvert>  ::= invert <exprKeyword> | <exprKeyword>
<exprKeyword> ::= <exprUnary> in <exprUnary> | <exprUnary> contains <exprUnary> | <exprUnary>
<exprUnary> ::= sum <exprFunction> | <exprFunction>
<exprFunction> ::= id leftbracket <commaListPlain> rightbracket | id leftbracket rightbracket
<exprFunction> ::= <varfunc> leftbracket <lvalue> rightbracket | <exprAtom>
<exprAtom> ::= <lvalue> | <atom> | break | continue
<exprAtom> ::= leftbracket <expr> rightbracket | leftsquare <commaList> rightsquare

<varfunc> ::= isset | delete
<commaList> ::= <commaListAssoc> | <commaListPlain>
<commaListPlain> ::= <commaListPlain> comma <expr> | <expr>
<commaListAssoc> ::= <commaListAssoc> comma <keyValue> | <keyValue>
<keyValue> ::= <expr> colon <expr>
<atom> ::= string | int | float | true | false | null
<lvalue> ::= id <arrayIdxs> | id
<arrayIdxs> ::= <arrayIdx> <arrayIdxs> | <arrayIdx>
<arrayIdx> ::= leftsquare <expr> rightsquare | leftsquare rightsquare
