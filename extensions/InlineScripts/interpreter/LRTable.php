<?php

/**
 * Autogenerated SLR-table for inline scripts language.
 *
 * You should not try to modify it manually (it's very easy to break).
 * Use syntax.txt and buildLRTables.php insteaed.
 *
 * Actions have following syntax
 *   array( 0, N ) means "shift and go to state N"
 *   array( 1, N ) means "reduce to production N"
 *   array( 2 ) means "accept"
 *   null means "error"
 *
 * Terminals are referred by names, nonterminals - by ids.
 *
 * Variables has following format:
 * * $nonterminals is a nonterminal ID -> name map.
 * * $productions is a ID -> array( nonterminal, body ) map.
 * * Production body is an array of production symbols
 *
 * Generated on 2011-08-06 07:13.
 */

class ISLRTable {

const Timestamp = '2011-08-06 07:13';

static $nonterminals = array(
	0 => 'program',
	1 => 'stmts',
	2 => 'stmt',
	3 => 'expr',
	4 => 'forlvalue',
	5 => 'lvalue',
	6 => 'exprset',
	7 => 'exprtrinary',
	8 => 'exprlogical',
	9 => 'exprcompare',
	10 => 'exprequals',
	11 => 'exprsum',
	12 => 'exprmul',
	13 => 'exprpow',
	14 => 'exprinvert',
	15 => 'exprkeyword',
	16 => 'exprunary',
	17 => 'exprfunction',
	18 => 'commalistplain',
	19 => 'varfunc',
	20 => 'expratom',
	21 => 'atom',
	22 => 'commalistassoc',
	23 => 'keyvalue',
	24 => 'arrayidx',
);

static $productions = array(
	0 => array( 0, array( 1 ) ),
	1 => array( 1, array( 1, 2 ) ),
	2 => array( 1, array( 2 ) ),
	3 => array( 2, array( 3, 'semicolon' ) ),
	4 => array( 2, array( 'if', 'leftbracket', 3, 'rightbracket', 2 ) ),
	5 => array( 2, array( 'if', 'leftbracket', 3, 'rightbracket', 2, 'else', 2 ) ),
	6 => array( 2, array( 'for', 'leftbracket', 4, 'in', 3, 'rightbracket', 2 ) ),
	7 => array( 2, array( 'try', 2, 'catch', 'leftbracket', 5, 'rightbracket', 2 ) ),
	8 => array( 2, array( 'leftcurly', 1, 'rightcurly' ) ),
	9 => array( 3, array( 6 ) ),
	10 => array( 6, array( 5, 'setto', 6 ) ),
	11 => array( 6, array( 7 ) ),
	12 => array( 7, array( 8, 'trinary', 7, 'colon', 7 ) ),
	13 => array( 7, array( 8 ) ),
	14 => array( 8, array( 8, 'logicop', 9 ) ),
	15 => array( 8, array( 9 ) ),
	16 => array( 9, array( 9, 'compareop', 10 ) ),
	17 => array( 9, array( 10 ) ),
	18 => array( 10, array( 11, 'equalsto', 11 ) ),
	19 => array( 10, array( 11 ) ),
	20 => array( 11, array( 11, 'sum', 12 ) ),
	21 => array( 11, array( 12 ) ),
	22 => array( 12, array( 12, 'mul', 13 ) ),
	23 => array( 12, array( 13 ) ),
	24 => array( 13, array( 14, 'pow', 13 ) ),
	25 => array( 13, array( 14 ) ),
	26 => array( 14, array( 'invert', 15 ) ),
	27 => array( 14, array( 15 ) ),
	28 => array( 15, array( 16, 'in', 16 ) ),
	29 => array( 15, array( 16, 'contains', 16 ) ),
	30 => array( 15, array( 16 ) ),
	31 => array( 16, array( 'sum', 17 ) ),
	32 => array( 16, array( 17 ) ),
	33 => array( 17, array( 'id', 'leftbracket', 18, 'rightbracket' ) ),
	34 => array( 17, array( 'id', 'leftbracket', 'rightbracket' ) ),
	35 => array( 17, array( 19, 'leftbracket', 5, 'rightbracket' ) ),
	36 => array( 17, array( 20 ) ),
	37 => array( 20, array( 5 ) ),
	38 => array( 20, array( 21 ) ),
	39 => array( 20, array( 'break' ) ),
	40 => array( 20, array( 'continue' ) ),
	41 => array( 20, array( 'leftbracket', 3, 'rightbracket' ) ),
	42 => array( 20, array( 'leftsquare', 18, 'rightsquare' ) ),
	43 => array( 20, array( 'leftcurly', 22, 'rightcurly' ) ),
	44 => array( 19, array( 'isset' ) ),
	45 => array( 19, array( 'delete' ) ),
	46 => array( 18, array( 18, 'comma', 3 ) ),
	47 => array( 18, array( 3 ) ),
	48 => array( 22, array( 22, 'comma', 23 ) ),
	49 => array( 22, array( 23 ) ),
	50 => array( 23, array( 3, 'colon', 3 ) ),
	51 => array( 21, array( 'string' ) ),
	52 => array( 21, array( 'int' ) ),
	53 => array( 21, array( 'float' ) ),
	54 => array( 21, array( 'true' ) ),
	55 => array( 21, array( 'false' ) ),
	56 => array( 21, array( 'null' ) ),
	57 => array( 5, array( 'id' ) ),
	58 => array( 5, array( 5, 24 ) ),
	59 => array( 24, array( 'leftsquare', 3, 'rightsquare' ) ),
	60 => array( 24, array( 'leftsquare', 'rightsquare' ) ),
	61 => array( 4, array( 5 ) ),
	62 => array( 4, array( 5, 'colon', 5 ) ),
);

static $action = array(
	0 => array(
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	1 => array(
		'leftbracket' => array( 0, 39 ),
	),
	2 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	3 => array(
		'leftbracket' => array( 0, 42 ),
	),
	4 => array(
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	5 => array(
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	6 => array(
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	7 => array(
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	8 => array(
		'rightbracket' => array( 1, 57 ),
		'setto' => array( 1, 57 ),
		'in' => array( 1, 57 ),
		'pow' => array( 1, 57 ),
		'equalsto' => array( 1, 57 ),
		'trinary' => array( 1, 57 ),
		'semicolon' => array( 1, 57 ),
		'colon' => array( 1, 57 ),
		'logicop' => array( 1, 57 ),
		'compareop' => array( 1, 57 ),
		'sum' => array( 1, 57 ),
		'mul' => array( 1, 57 ),
		'contains' => array( 1, 57 ),
		'leftsquare' => array( 1, 57 ),
		'rightsquare' => array( 1, 57 ),
		'comma' => array( 1, 57 ),
		'rightcurly' => array( 1, 57 ),
		'leftbracket' => array( 0, 52 ),
	),
	9 => array(
		'in' => array( 1, 39 ),
		'pow' => array( 1, 39 ),
		'equalsto' => array( 1, 39 ),
		'trinary' => array( 1, 39 ),
		'semicolon' => array( 1, 39 ),
		'rightbracket' => array( 1, 39 ),
		'colon' => array( 1, 39 ),
		'logicop' => array( 1, 39 ),
		'compareop' => array( 1, 39 ),
		'sum' => array( 1, 39 ),
		'mul' => array( 1, 39 ),
		'contains' => array( 1, 39 ),
		'rightsquare' => array( 1, 39 ),
		'comma' => array( 1, 39 ),
		'rightcurly' => array( 1, 39 ),
	),
	10 => array(
		'in' => array( 1, 40 ),
		'pow' => array( 1, 40 ),
		'equalsto' => array( 1, 40 ),
		'trinary' => array( 1, 40 ),
		'semicolon' => array( 1, 40 ),
		'rightbracket' => array( 1, 40 ),
		'colon' => array( 1, 40 ),
		'logicop' => array( 1, 40 ),
		'compareop' => array( 1, 40 ),
		'sum' => array( 1, 40 ),
		'mul' => array( 1, 40 ),
		'contains' => array( 1, 40 ),
		'rightsquare' => array( 1, 40 ),
		'comma' => array( 1, 40 ),
		'rightcurly' => array( 1, 40 ),
	),
	11 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	12 => array(
		'leftbracket' => array( 1, 44 ),
	),
	13 => array(
		'leftbracket' => array( 1, 45 ),
	),
	14 => array(
		'in' => array( 1, 51 ),
		'pow' => array( 1, 51 ),
		'equalsto' => array( 1, 51 ),
		'trinary' => array( 1, 51 ),
		'semicolon' => array( 1, 51 ),
		'rightbracket' => array( 1, 51 ),
		'colon' => array( 1, 51 ),
		'logicop' => array( 1, 51 ),
		'compareop' => array( 1, 51 ),
		'sum' => array( 1, 51 ),
		'mul' => array( 1, 51 ),
		'contains' => array( 1, 51 ),
		'rightsquare' => array( 1, 51 ),
		'comma' => array( 1, 51 ),
		'rightcurly' => array( 1, 51 ),
	),
	15 => array(
		'in' => array( 1, 52 ),
		'pow' => array( 1, 52 ),
		'equalsto' => array( 1, 52 ),
		'trinary' => array( 1, 52 ),
		'semicolon' => array( 1, 52 ),
		'rightbracket' => array( 1, 52 ),
		'colon' => array( 1, 52 ),
		'logicop' => array( 1, 52 ),
		'compareop' => array( 1, 52 ),
		'sum' => array( 1, 52 ),
		'mul' => array( 1, 52 ),
		'contains' => array( 1, 52 ),
		'rightsquare' => array( 1, 52 ),
		'comma' => array( 1, 52 ),
		'rightcurly' => array( 1, 52 ),
	),
	16 => array(
		'in' => array( 1, 53 ),
		'pow' => array( 1, 53 ),
		'equalsto' => array( 1, 53 ),
		'trinary' => array( 1, 53 ),
		'semicolon' => array( 1, 53 ),
		'rightbracket' => array( 1, 53 ),
		'colon' => array( 1, 53 ),
		'logicop' => array( 1, 53 ),
		'compareop' => array( 1, 53 ),
		'sum' => array( 1, 53 ),
		'mul' => array( 1, 53 ),
		'contains' => array( 1, 53 ),
		'rightsquare' => array( 1, 53 ),
		'comma' => array( 1, 53 ),
		'rightcurly' => array( 1, 53 ),
	),
	17 => array(
		'in' => array( 1, 54 ),
		'pow' => array( 1, 54 ),
		'equalsto' => array( 1, 54 ),
		'trinary' => array( 1, 54 ),
		'semicolon' => array( 1, 54 ),
		'rightbracket' => array( 1, 54 ),
		'colon' => array( 1, 54 ),
		'logicop' => array( 1, 54 ),
		'compareop' => array( 1, 54 ),
		'sum' => array( 1, 54 ),
		'mul' => array( 1, 54 ),
		'contains' => array( 1, 54 ),
		'rightsquare' => array( 1, 54 ),
		'comma' => array( 1, 54 ),
		'rightcurly' => array( 1, 54 ),
	),
	18 => array(
		'in' => array( 1, 55 ),
		'pow' => array( 1, 55 ),
		'equalsto' => array( 1, 55 ),
		'trinary' => array( 1, 55 ),
		'semicolon' => array( 1, 55 ),
		'rightbracket' => array( 1, 55 ),
		'colon' => array( 1, 55 ),
		'logicop' => array( 1, 55 ),
		'compareop' => array( 1, 55 ),
		'sum' => array( 1, 55 ),
		'mul' => array( 1, 55 ),
		'contains' => array( 1, 55 ),
		'rightsquare' => array( 1, 55 ),
		'comma' => array( 1, 55 ),
		'rightcurly' => array( 1, 55 ),
	),
	19 => array(
		'in' => array( 1, 56 ),
		'pow' => array( 1, 56 ),
		'equalsto' => array( 1, 56 ),
		'trinary' => array( 1, 56 ),
		'semicolon' => array( 1, 56 ),
		'rightbracket' => array( 1, 56 ),
		'colon' => array( 1, 56 ),
		'logicop' => array( 1, 56 ),
		'compareop' => array( 1, 56 ),
		'sum' => array( 1, 56 ),
		'mul' => array( 1, 56 ),
		'contains' => array( 1, 56 ),
		'rightsquare' => array( 1, 56 ),
		'comma' => array( 1, 56 ),
		'rightcurly' => array( 1, 56 ),
	),
	20 => array(
		'$' => array( 2, null ),
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	21 => array(
		'$' => array( 1, 2 ),
		'if' => array( 1, 2 ),
		'for' => array( 1, 2 ),
		'try' => array( 1, 2 ),
		'leftcurly' => array( 1, 2 ),
		'id' => array( 1, 2 ),
		'invert' => array( 1, 2 ),
		'sum' => array( 1, 2 ),
		'isset' => array( 1, 2 ),
		'delete' => array( 1, 2 ),
		'break' => array( 1, 2 ),
		'continue' => array( 1, 2 ),
		'leftbracket' => array( 1, 2 ),
		'leftsquare' => array( 1, 2 ),
		'string' => array( 1, 2 ),
		'int' => array( 1, 2 ),
		'float' => array( 1, 2 ),
		'true' => array( 1, 2 ),
		'false' => array( 1, 2 ),
		'null' => array( 1, 2 ),
		'rightcurly' => array( 1, 2 ),
	),
	22 => array(
		'semicolon' => array( 0, 56 ),
	),
	23 => array(
		'setto' => array( 0, 57 ),
		'in' => array( 1, 37 ),
		'pow' => array( 1, 37 ),
		'equalsto' => array( 1, 37 ),
		'trinary' => array( 1, 37 ),
		'semicolon' => array( 1, 37 ),
		'rightbracket' => array( 1, 37 ),
		'colon' => array( 1, 37 ),
		'logicop' => array( 1, 37 ),
		'compareop' => array( 1, 37 ),
		'sum' => array( 1, 37 ),
		'mul' => array( 1, 37 ),
		'contains' => array( 1, 37 ),
		'rightsquare' => array( 1, 37 ),
		'comma' => array( 1, 37 ),
		'rightcurly' => array( 1, 37 ),
		'leftsquare' => array( 0, 58 ),
	),
	24 => array(
		'semicolon' => array( 1, 9 ),
		'rightbracket' => array( 1, 9 ),
		'rightsquare' => array( 1, 9 ),
		'comma' => array( 1, 9 ),
		'colon' => array( 1, 9 ),
		'rightcurly' => array( 1, 9 ),
	),
	25 => array(
		'semicolon' => array( 1, 11 ),
		'rightbracket' => array( 1, 11 ),
		'rightsquare' => array( 1, 11 ),
		'comma' => array( 1, 11 ),
		'colon' => array( 1, 11 ),
		'rightcurly' => array( 1, 11 ),
	),
	26 => array(
		'trinary' => array( 0, 60 ),
		'semicolon' => array( 1, 13 ),
		'rightbracket' => array( 1, 13 ),
		'colon' => array( 1, 13 ),
		'rightsquare' => array( 1, 13 ),
		'comma' => array( 1, 13 ),
		'rightcurly' => array( 1, 13 ),
		'logicop' => array( 0, 61 ),
	),
	27 => array(
		'trinary' => array( 1, 15 ),
		'semicolon' => array( 1, 15 ),
		'rightbracket' => array( 1, 15 ),
		'colon' => array( 1, 15 ),
		'logicop' => array( 1, 15 ),
		'rightsquare' => array( 1, 15 ),
		'comma' => array( 1, 15 ),
		'rightcurly' => array( 1, 15 ),
		'compareop' => array( 0, 62 ),
	),
	28 => array(
		'trinary' => array( 1, 17 ),
		'semicolon' => array( 1, 17 ),
		'rightbracket' => array( 1, 17 ),
		'colon' => array( 1, 17 ),
		'logicop' => array( 1, 17 ),
		'compareop' => array( 1, 17 ),
		'rightsquare' => array( 1, 17 ),
		'comma' => array( 1, 17 ),
		'rightcurly' => array( 1, 17 ),
	),
	29 => array(
		'equalsto' => array( 0, 63 ),
		'trinary' => array( 1, 19 ),
		'semicolon' => array( 1, 19 ),
		'rightbracket' => array( 1, 19 ),
		'colon' => array( 1, 19 ),
		'logicop' => array( 1, 19 ),
		'compareop' => array( 1, 19 ),
		'rightsquare' => array( 1, 19 ),
		'comma' => array( 1, 19 ),
		'rightcurly' => array( 1, 19 ),
		'sum' => array( 0, 64 ),
	),
	30 => array(
		'equalsto' => array( 1, 21 ),
		'trinary' => array( 1, 21 ),
		'semicolon' => array( 1, 21 ),
		'rightbracket' => array( 1, 21 ),
		'colon' => array( 1, 21 ),
		'logicop' => array( 1, 21 ),
		'compareop' => array( 1, 21 ),
		'sum' => array( 1, 21 ),
		'rightsquare' => array( 1, 21 ),
		'comma' => array( 1, 21 ),
		'rightcurly' => array( 1, 21 ),
		'mul' => array( 0, 65 ),
	),
	31 => array(
		'equalsto' => array( 1, 23 ),
		'trinary' => array( 1, 23 ),
		'semicolon' => array( 1, 23 ),
		'rightbracket' => array( 1, 23 ),
		'colon' => array( 1, 23 ),
		'logicop' => array( 1, 23 ),
		'compareop' => array( 1, 23 ),
		'sum' => array( 1, 23 ),
		'mul' => array( 1, 23 ),
		'rightsquare' => array( 1, 23 ),
		'comma' => array( 1, 23 ),
		'rightcurly' => array( 1, 23 ),
	),
	32 => array(
		'pow' => array( 0, 66 ),
		'equalsto' => array( 1, 25 ),
		'trinary' => array( 1, 25 ),
		'semicolon' => array( 1, 25 ),
		'rightbracket' => array( 1, 25 ),
		'colon' => array( 1, 25 ),
		'logicop' => array( 1, 25 ),
		'compareop' => array( 1, 25 ),
		'sum' => array( 1, 25 ),
		'mul' => array( 1, 25 ),
		'rightsquare' => array( 1, 25 ),
		'comma' => array( 1, 25 ),
		'rightcurly' => array( 1, 25 ),
	),
	33 => array(
		'pow' => array( 1, 27 ),
		'equalsto' => array( 1, 27 ),
		'trinary' => array( 1, 27 ),
		'semicolon' => array( 1, 27 ),
		'rightbracket' => array( 1, 27 ),
		'colon' => array( 1, 27 ),
		'logicop' => array( 1, 27 ),
		'compareop' => array( 1, 27 ),
		'sum' => array( 1, 27 ),
		'mul' => array( 1, 27 ),
		'rightsquare' => array( 1, 27 ),
		'comma' => array( 1, 27 ),
		'rightcurly' => array( 1, 27 ),
	),
	34 => array(
		'in' => array( 0, 67 ),
		'contains' => array( 0, 68 ),
		'pow' => array( 1, 30 ),
		'equalsto' => array( 1, 30 ),
		'trinary' => array( 1, 30 ),
		'semicolon' => array( 1, 30 ),
		'rightbracket' => array( 1, 30 ),
		'colon' => array( 1, 30 ),
		'logicop' => array( 1, 30 ),
		'compareop' => array( 1, 30 ),
		'sum' => array( 1, 30 ),
		'mul' => array( 1, 30 ),
		'rightsquare' => array( 1, 30 ),
		'comma' => array( 1, 30 ),
		'rightcurly' => array( 1, 30 ),
	),
	35 => array(
		'in' => array( 1, 32 ),
		'pow' => array( 1, 32 ),
		'equalsto' => array( 1, 32 ),
		'trinary' => array( 1, 32 ),
		'semicolon' => array( 1, 32 ),
		'rightbracket' => array( 1, 32 ),
		'colon' => array( 1, 32 ),
		'logicop' => array( 1, 32 ),
		'compareop' => array( 1, 32 ),
		'sum' => array( 1, 32 ),
		'mul' => array( 1, 32 ),
		'contains' => array( 1, 32 ),
		'rightsquare' => array( 1, 32 ),
		'comma' => array( 1, 32 ),
		'rightcurly' => array( 1, 32 ),
	),
	36 => array(
		'leftbracket' => array( 0, 69 ),
	),
	37 => array(
		'in' => array( 1, 36 ),
		'pow' => array( 1, 36 ),
		'equalsto' => array( 1, 36 ),
		'trinary' => array( 1, 36 ),
		'semicolon' => array( 1, 36 ),
		'rightbracket' => array( 1, 36 ),
		'colon' => array( 1, 36 ),
		'logicop' => array( 1, 36 ),
		'compareop' => array( 1, 36 ),
		'sum' => array( 1, 36 ),
		'mul' => array( 1, 36 ),
		'contains' => array( 1, 36 ),
		'rightsquare' => array( 1, 36 ),
		'comma' => array( 1, 36 ),
		'rightcurly' => array( 1, 36 ),
	),
	38 => array(
		'in' => array( 1, 38 ),
		'pow' => array( 1, 38 ),
		'equalsto' => array( 1, 38 ),
		'trinary' => array( 1, 38 ),
		'semicolon' => array( 1, 38 ),
		'rightbracket' => array( 1, 38 ),
		'colon' => array( 1, 38 ),
		'logicop' => array( 1, 38 ),
		'compareop' => array( 1, 38 ),
		'sum' => array( 1, 38 ),
		'mul' => array( 1, 38 ),
		'contains' => array( 1, 38 ),
		'rightsquare' => array( 1, 38 ),
		'comma' => array( 1, 38 ),
		'rightcurly' => array( 1, 38 ),
	),
	39 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	40 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	41 => array(
		'rightbracket' => array( 0, 72 ),
	),
	42 => array(
		'id' => array( 0, 73 ),
	),
	43 => array(
		'catch' => array( 0, 76 ),
	),
	44 => array(
		'rightcurly' => array( 0, 77 ),
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	45 => array(
		'semicolon' => array( 0, 56 ),
		'colon' => array( 0, 78 ),
	),
	46 => array(
		'rightcurly' => array( 0, 79 ),
		'comma' => array( 0, 80 ),
	),
	47 => array(
		'rightcurly' => array( 1, 49 ),
		'comma' => array( 1, 49 ),
	),
	48 => array(
		'leftbracket' => array( 0, 52 ),
		'rightbracket' => array( 1, 57 ),
		'setto' => array( 1, 57 ),
		'in' => array( 1, 57 ),
		'pow' => array( 1, 57 ),
		'equalsto' => array( 1, 57 ),
		'trinary' => array( 1, 57 ),
		'semicolon' => array( 1, 57 ),
		'colon' => array( 1, 57 ),
		'logicop' => array( 1, 57 ),
		'compareop' => array( 1, 57 ),
		'sum' => array( 1, 57 ),
		'mul' => array( 1, 57 ),
		'contains' => array( 1, 57 ),
		'leftsquare' => array( 1, 57 ),
		'rightsquare' => array( 1, 57 ),
		'comma' => array( 1, 57 ),
		'rightcurly' => array( 1, 57 ),
	),
	49 => array(
		'in' => array( 1, 37 ),
		'pow' => array( 1, 37 ),
		'equalsto' => array( 1, 37 ),
		'trinary' => array( 1, 37 ),
		'semicolon' => array( 1, 37 ),
		'rightbracket' => array( 1, 37 ),
		'colon' => array( 1, 37 ),
		'logicop' => array( 1, 37 ),
		'compareop' => array( 1, 37 ),
		'sum' => array( 1, 37 ),
		'mul' => array( 1, 37 ),
		'contains' => array( 1, 37 ),
		'rightsquare' => array( 1, 37 ),
		'comma' => array( 1, 37 ),
		'rightcurly' => array( 1, 37 ),
		'leftsquare' => array( 0, 58 ),
	),
	50 => array(
		'in' => array( 1, 31 ),
		'pow' => array( 1, 31 ),
		'equalsto' => array( 1, 31 ),
		'trinary' => array( 1, 31 ),
		'semicolon' => array( 1, 31 ),
		'rightbracket' => array( 1, 31 ),
		'colon' => array( 1, 31 ),
		'logicop' => array( 1, 31 ),
		'compareop' => array( 1, 31 ),
		'sum' => array( 1, 31 ),
		'mul' => array( 1, 31 ),
		'contains' => array( 1, 31 ),
		'rightsquare' => array( 1, 31 ),
		'comma' => array( 1, 31 ),
		'rightcurly' => array( 1, 31 ),
	),
	51 => array(
		'pow' => array( 1, 26 ),
		'equalsto' => array( 1, 26 ),
		'trinary' => array( 1, 26 ),
		'semicolon' => array( 1, 26 ),
		'rightbracket' => array( 1, 26 ),
		'colon' => array( 1, 26 ),
		'logicop' => array( 1, 26 ),
		'compareop' => array( 1, 26 ),
		'sum' => array( 1, 26 ),
		'mul' => array( 1, 26 ),
		'rightsquare' => array( 1, 26 ),
		'comma' => array( 1, 26 ),
		'rightcurly' => array( 1, 26 ),
	),
	52 => array(
		'rightbracket' => array( 0, 81 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	53 => array(
		'rightbracket' => array( 1, 47 ),
		'rightsquare' => array( 1, 47 ),
		'comma' => array( 1, 47 ),
	),
	54 => array(
		'rightsquare' => array( 0, 83 ),
		'comma' => array( 0, 84 ),
	),
	55 => array(
		'$' => array( 1, 1 ),
		'if' => array( 1, 1 ),
		'for' => array( 1, 1 ),
		'try' => array( 1, 1 ),
		'leftcurly' => array( 1, 1 ),
		'id' => array( 1, 1 ),
		'invert' => array( 1, 1 ),
		'sum' => array( 1, 1 ),
		'isset' => array( 1, 1 ),
		'delete' => array( 1, 1 ),
		'break' => array( 1, 1 ),
		'continue' => array( 1, 1 ),
		'leftbracket' => array( 1, 1 ),
		'leftsquare' => array( 1, 1 ),
		'string' => array( 1, 1 ),
		'int' => array( 1, 1 ),
		'float' => array( 1, 1 ),
		'true' => array( 1, 1 ),
		'false' => array( 1, 1 ),
		'null' => array( 1, 1 ),
		'rightcurly' => array( 1, 1 ),
	),
	56 => array(
		'$' => array( 1, 3 ),
		'if' => array( 1, 3 ),
		'for' => array( 1, 3 ),
		'try' => array( 1, 3 ),
		'leftcurly' => array( 1, 3 ),
		'id' => array( 1, 3 ),
		'invert' => array( 1, 3 ),
		'sum' => array( 1, 3 ),
		'isset' => array( 1, 3 ),
		'delete' => array( 1, 3 ),
		'break' => array( 1, 3 ),
		'continue' => array( 1, 3 ),
		'leftbracket' => array( 1, 3 ),
		'leftsquare' => array( 1, 3 ),
		'string' => array( 1, 3 ),
		'int' => array( 1, 3 ),
		'float' => array( 1, 3 ),
		'true' => array( 1, 3 ),
		'false' => array( 1, 3 ),
		'null' => array( 1, 3 ),
		'else' => array( 1, 3 ),
		'catch' => array( 1, 3 ),
		'rightcurly' => array( 1, 3 ),
	),
	57 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	58 => array(
		'rightsquare' => array( 0, 86 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	59 => array(
		'rightbracket' => array( 1, 58 ),
		'setto' => array( 1, 58 ),
		'in' => array( 1, 58 ),
		'pow' => array( 1, 58 ),
		'equalsto' => array( 1, 58 ),
		'trinary' => array( 1, 58 ),
		'semicolon' => array( 1, 58 ),
		'colon' => array( 1, 58 ),
		'logicop' => array( 1, 58 ),
		'compareop' => array( 1, 58 ),
		'sum' => array( 1, 58 ),
		'mul' => array( 1, 58 ),
		'contains' => array( 1, 58 ),
		'leftsquare' => array( 1, 58 ),
		'rightsquare' => array( 1, 58 ),
		'comma' => array( 1, 58 ),
		'rightcurly' => array( 1, 58 ),
	),
	60 => array(
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	61 => array(
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	62 => array(
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	63 => array(
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	64 => array(
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	65 => array(
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	66 => array(
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	67 => array(
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	68 => array(
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	69 => array(
		'id' => array( 0, 73 ),
	),
	70 => array(
		'rightbracket' => array( 0, 98 ),
	),
	71 => array(
		'colon' => array( 0, 78 ),
	),
	72 => array(
		'in' => array( 1, 41 ),
		'pow' => array( 1, 41 ),
		'equalsto' => array( 1, 41 ),
		'trinary' => array( 1, 41 ),
		'semicolon' => array( 1, 41 ),
		'rightbracket' => array( 1, 41 ),
		'colon' => array( 1, 41 ),
		'logicop' => array( 1, 41 ),
		'compareop' => array( 1, 41 ),
		'sum' => array( 1, 41 ),
		'mul' => array( 1, 41 ),
		'contains' => array( 1, 41 ),
		'rightsquare' => array( 1, 41 ),
		'comma' => array( 1, 41 ),
		'rightcurly' => array( 1, 41 ),
	),
	73 => array(
		'rightbracket' => array( 1, 57 ),
		'setto' => array( 1, 57 ),
		'in' => array( 1, 57 ),
		'pow' => array( 1, 57 ),
		'equalsto' => array( 1, 57 ),
		'trinary' => array( 1, 57 ),
		'semicolon' => array( 1, 57 ),
		'colon' => array( 1, 57 ),
		'logicop' => array( 1, 57 ),
		'compareop' => array( 1, 57 ),
		'sum' => array( 1, 57 ),
		'mul' => array( 1, 57 ),
		'contains' => array( 1, 57 ),
		'leftsquare' => array( 1, 57 ),
		'rightsquare' => array( 1, 57 ),
		'comma' => array( 1, 57 ),
		'rightcurly' => array( 1, 57 ),
	),
	74 => array(
		'in' => array( 0, 99 ),
	),
	75 => array(
		'in' => array( 1, 61 ),
		'colon' => array( 0, 100 ),
		'leftsquare' => array( 0, 58 ),
	),
	76 => array(
		'leftbracket' => array( 0, 101 ),
	),
	77 => array(
		'$' => array( 1, 8 ),
		'if' => array( 1, 8 ),
		'for' => array( 1, 8 ),
		'try' => array( 1, 8 ),
		'leftcurly' => array( 1, 8 ),
		'id' => array( 1, 8 ),
		'invert' => array( 1, 8 ),
		'sum' => array( 1, 8 ),
		'isset' => array( 1, 8 ),
		'delete' => array( 1, 8 ),
		'break' => array( 1, 8 ),
		'continue' => array( 1, 8 ),
		'leftbracket' => array( 1, 8 ),
		'leftsquare' => array( 1, 8 ),
		'string' => array( 1, 8 ),
		'int' => array( 1, 8 ),
		'float' => array( 1, 8 ),
		'true' => array( 1, 8 ),
		'false' => array( 1, 8 ),
		'null' => array( 1, 8 ),
		'else' => array( 1, 8 ),
		'catch' => array( 1, 8 ),
		'rightcurly' => array( 1, 8 ),
	),
	78 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	79 => array(
		'in' => array( 1, 43 ),
		'pow' => array( 1, 43 ),
		'equalsto' => array( 1, 43 ),
		'trinary' => array( 1, 43 ),
		'semicolon' => array( 1, 43 ),
		'rightbracket' => array( 1, 43 ),
		'colon' => array( 1, 43 ),
		'logicop' => array( 1, 43 ),
		'compareop' => array( 1, 43 ),
		'sum' => array( 1, 43 ),
		'mul' => array( 1, 43 ),
		'contains' => array( 1, 43 ),
		'rightsquare' => array( 1, 43 ),
		'comma' => array( 1, 43 ),
		'rightcurly' => array( 1, 43 ),
	),
	80 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	81 => array(
		'in' => array( 1, 34 ),
		'pow' => array( 1, 34 ),
		'equalsto' => array( 1, 34 ),
		'trinary' => array( 1, 34 ),
		'semicolon' => array( 1, 34 ),
		'rightbracket' => array( 1, 34 ),
		'colon' => array( 1, 34 ),
		'logicop' => array( 1, 34 ),
		'compareop' => array( 1, 34 ),
		'sum' => array( 1, 34 ),
		'mul' => array( 1, 34 ),
		'contains' => array( 1, 34 ),
		'rightsquare' => array( 1, 34 ),
		'comma' => array( 1, 34 ),
		'rightcurly' => array( 1, 34 ),
	),
	82 => array(
		'rightbracket' => array( 0, 104 ),
		'comma' => array( 0, 84 ),
	),
	83 => array(
		'in' => array( 1, 42 ),
		'pow' => array( 1, 42 ),
		'equalsto' => array( 1, 42 ),
		'trinary' => array( 1, 42 ),
		'semicolon' => array( 1, 42 ),
		'rightbracket' => array( 1, 42 ),
		'colon' => array( 1, 42 ),
		'logicop' => array( 1, 42 ),
		'compareop' => array( 1, 42 ),
		'sum' => array( 1, 42 ),
		'mul' => array( 1, 42 ),
		'contains' => array( 1, 42 ),
		'rightsquare' => array( 1, 42 ),
		'comma' => array( 1, 42 ),
		'rightcurly' => array( 1, 42 ),
	),
	84 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	85 => array(
		'semicolon' => array( 1, 10 ),
		'rightbracket' => array( 1, 10 ),
		'rightsquare' => array( 1, 10 ),
		'comma' => array( 1, 10 ),
		'colon' => array( 1, 10 ),
		'rightcurly' => array( 1, 10 ),
	),
	86 => array(
		'rightbracket' => array( 1, 60 ),
		'setto' => array( 1, 60 ),
		'in' => array( 1, 60 ),
		'pow' => array( 1, 60 ),
		'equalsto' => array( 1, 60 ),
		'trinary' => array( 1, 60 ),
		'semicolon' => array( 1, 60 ),
		'colon' => array( 1, 60 ),
		'logicop' => array( 1, 60 ),
		'compareop' => array( 1, 60 ),
		'sum' => array( 1, 60 ),
		'mul' => array( 1, 60 ),
		'contains' => array( 1, 60 ),
		'leftsquare' => array( 1, 60 ),
		'rightsquare' => array( 1, 60 ),
		'comma' => array( 1, 60 ),
		'rightcurly' => array( 1, 60 ),
	),
	87 => array(
		'rightsquare' => array( 0, 106 ),
	),
	88 => array(
		'colon' => array( 0, 107 ),
	),
	89 => array(
		'trinary' => array( 1, 14 ),
		'semicolon' => array( 1, 14 ),
		'rightbracket' => array( 1, 14 ),
		'colon' => array( 1, 14 ),
		'logicop' => array( 1, 14 ),
		'rightsquare' => array( 1, 14 ),
		'comma' => array( 1, 14 ),
		'rightcurly' => array( 1, 14 ),
		'compareop' => array( 0, 62 ),
	),
	90 => array(
		'trinary' => array( 1, 16 ),
		'semicolon' => array( 1, 16 ),
		'rightbracket' => array( 1, 16 ),
		'colon' => array( 1, 16 ),
		'logicop' => array( 1, 16 ),
		'compareop' => array( 1, 16 ),
		'rightsquare' => array( 1, 16 ),
		'comma' => array( 1, 16 ),
		'rightcurly' => array( 1, 16 ),
	),
	91 => array(
		'trinary' => array( 1, 18 ),
		'semicolon' => array( 1, 18 ),
		'rightbracket' => array( 1, 18 ),
		'colon' => array( 1, 18 ),
		'logicop' => array( 1, 18 ),
		'compareop' => array( 1, 18 ),
		'rightsquare' => array( 1, 18 ),
		'comma' => array( 1, 18 ),
		'rightcurly' => array( 1, 18 ),
		'sum' => array( 0, 64 ),
	),
	92 => array(
		'equalsto' => array( 1, 20 ),
		'trinary' => array( 1, 20 ),
		'semicolon' => array( 1, 20 ),
		'rightbracket' => array( 1, 20 ),
		'colon' => array( 1, 20 ),
		'logicop' => array( 1, 20 ),
		'compareop' => array( 1, 20 ),
		'sum' => array( 1, 20 ),
		'rightsquare' => array( 1, 20 ),
		'comma' => array( 1, 20 ),
		'rightcurly' => array( 1, 20 ),
		'mul' => array( 0, 65 ),
	),
	93 => array(
		'equalsto' => array( 1, 22 ),
		'trinary' => array( 1, 22 ),
		'semicolon' => array( 1, 22 ),
		'rightbracket' => array( 1, 22 ),
		'colon' => array( 1, 22 ),
		'logicop' => array( 1, 22 ),
		'compareop' => array( 1, 22 ),
		'sum' => array( 1, 22 ),
		'mul' => array( 1, 22 ),
		'rightsquare' => array( 1, 22 ),
		'comma' => array( 1, 22 ),
		'rightcurly' => array( 1, 22 ),
	),
	94 => array(
		'equalsto' => array( 1, 24 ),
		'trinary' => array( 1, 24 ),
		'semicolon' => array( 1, 24 ),
		'rightbracket' => array( 1, 24 ),
		'colon' => array( 1, 24 ),
		'logicop' => array( 1, 24 ),
		'compareop' => array( 1, 24 ),
		'sum' => array( 1, 24 ),
		'mul' => array( 1, 24 ),
		'rightsquare' => array( 1, 24 ),
		'comma' => array( 1, 24 ),
		'rightcurly' => array( 1, 24 ),
	),
	95 => array(
		'pow' => array( 1, 28 ),
		'equalsto' => array( 1, 28 ),
		'trinary' => array( 1, 28 ),
		'semicolon' => array( 1, 28 ),
		'rightbracket' => array( 1, 28 ),
		'colon' => array( 1, 28 ),
		'logicop' => array( 1, 28 ),
		'compareop' => array( 1, 28 ),
		'sum' => array( 1, 28 ),
		'mul' => array( 1, 28 ),
		'rightsquare' => array( 1, 28 ),
		'comma' => array( 1, 28 ),
		'rightcurly' => array( 1, 28 ),
	),
	96 => array(
		'pow' => array( 1, 29 ),
		'equalsto' => array( 1, 29 ),
		'trinary' => array( 1, 29 ),
		'semicolon' => array( 1, 29 ),
		'rightbracket' => array( 1, 29 ),
		'colon' => array( 1, 29 ),
		'logicop' => array( 1, 29 ),
		'compareop' => array( 1, 29 ),
		'sum' => array( 1, 29 ),
		'mul' => array( 1, 29 ),
		'rightsquare' => array( 1, 29 ),
		'comma' => array( 1, 29 ),
		'rightcurly' => array( 1, 29 ),
	),
	97 => array(
		'rightbracket' => array( 0, 108 ),
		'leftsquare' => array( 0, 58 ),
	),
	98 => array(
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	99 => array(
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	100 => array(
		'id' => array( 0, 73 ),
	),
	101 => array(
		'id' => array( 0, 73 ),
	),
	102 => array(
		'rightcurly' => array( 1, 50 ),
		'comma' => array( 1, 50 ),
	),
	103 => array(
		'rightcurly' => array( 1, 48 ),
		'comma' => array( 1, 48 ),
	),
	104 => array(
		'in' => array( 1, 33 ),
		'pow' => array( 1, 33 ),
		'equalsto' => array( 1, 33 ),
		'trinary' => array( 1, 33 ),
		'semicolon' => array( 1, 33 ),
		'rightbracket' => array( 1, 33 ),
		'colon' => array( 1, 33 ),
		'logicop' => array( 1, 33 ),
		'compareop' => array( 1, 33 ),
		'sum' => array( 1, 33 ),
		'mul' => array( 1, 33 ),
		'contains' => array( 1, 33 ),
		'rightsquare' => array( 1, 33 ),
		'comma' => array( 1, 33 ),
		'rightcurly' => array( 1, 33 ),
	),
	105 => array(
		'rightbracket' => array( 1, 46 ),
		'rightsquare' => array( 1, 46 ),
		'comma' => array( 1, 46 ),
	),
	106 => array(
		'rightbracket' => array( 1, 59 ),
		'setto' => array( 1, 59 ),
		'in' => array( 1, 59 ),
		'pow' => array( 1, 59 ),
		'equalsto' => array( 1, 59 ),
		'trinary' => array( 1, 59 ),
		'semicolon' => array( 1, 59 ),
		'colon' => array( 1, 59 ),
		'logicop' => array( 1, 59 ),
		'compareop' => array( 1, 59 ),
		'sum' => array( 1, 59 ),
		'mul' => array( 1, 59 ),
		'contains' => array( 1, 59 ),
		'leftsquare' => array( 1, 59 ),
		'rightsquare' => array( 1, 59 ),
		'comma' => array( 1, 59 ),
		'rightcurly' => array( 1, 59 ),
	),
	107 => array(
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'id' => array( 0, 48 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'leftcurly' => array( 0, 40 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	108 => array(
		'in' => array( 1, 35 ),
		'pow' => array( 1, 35 ),
		'equalsto' => array( 1, 35 ),
		'trinary' => array( 1, 35 ),
		'semicolon' => array( 1, 35 ),
		'rightbracket' => array( 1, 35 ),
		'colon' => array( 1, 35 ),
		'logicop' => array( 1, 35 ),
		'compareop' => array( 1, 35 ),
		'sum' => array( 1, 35 ),
		'mul' => array( 1, 35 ),
		'contains' => array( 1, 35 ),
		'rightsquare' => array( 1, 35 ),
		'comma' => array( 1, 35 ),
		'rightcurly' => array( 1, 35 ),
	),
	109 => array(
		'$' => array( 1, 4 ),
		'if' => array( 1, 4 ),
		'for' => array( 1, 4 ),
		'try' => array( 1, 4 ),
		'leftcurly' => array( 1, 4 ),
		'id' => array( 1, 4 ),
		'invert' => array( 1, 4 ),
		'sum' => array( 1, 4 ),
		'isset' => array( 1, 4 ),
		'delete' => array( 1, 4 ),
		'break' => array( 1, 4 ),
		'continue' => array( 1, 4 ),
		'leftbracket' => array( 1, 4 ),
		'leftsquare' => array( 1, 4 ),
		'string' => array( 1, 4 ),
		'int' => array( 1, 4 ),
		'float' => array( 1, 4 ),
		'true' => array( 1, 4 ),
		'false' => array( 1, 4 ),
		'null' => array( 1, 4 ),
		'else' => array( 0, 114 ),
		'catch' => array( 1, 4 ),
		'rightcurly' => array( 1, 4 ),
	),
	110 => array(
		'rightbracket' => array( 0, 115 ),
	),
	111 => array(
		'in' => array( 1, 62 ),
		'leftsquare' => array( 0, 58 ),
	),
	112 => array(
		'rightbracket' => array( 0, 116 ),
		'leftsquare' => array( 0, 58 ),
	),
	113 => array(
		'semicolon' => array( 1, 12 ),
		'rightbracket' => array( 1, 12 ),
		'colon' => array( 1, 12 ),
		'rightsquare' => array( 1, 12 ),
		'comma' => array( 1, 12 ),
		'rightcurly' => array( 1, 12 ),
	),
	114 => array(
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	115 => array(
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	116 => array(
		'if' => array( 0, 1 ),
		'for' => array( 0, 3 ),
		'try' => array( 0, 4 ),
		'leftcurly' => array( 0, 5 ),
		'id' => array( 0, 8 ),
		'invert' => array( 0, 7 ),
		'sum' => array( 0, 6 ),
		'isset' => array( 0, 12 ),
		'delete' => array( 0, 13 ),
		'break' => array( 0, 9 ),
		'continue' => array( 0, 10 ),
		'leftbracket' => array( 0, 2 ),
		'leftsquare' => array( 0, 11 ),
		'string' => array( 0, 14 ),
		'int' => array( 0, 15 ),
		'float' => array( 0, 16 ),
		'true' => array( 0, 17 ),
		'false' => array( 0, 18 ),
		'null' => array( 0, 19 ),
	),
	117 => array(
		'$' => array( 1, 5 ),
		'if' => array( 1, 5 ),
		'for' => array( 1, 5 ),
		'try' => array( 1, 5 ),
		'leftcurly' => array( 1, 5 ),
		'id' => array( 1, 5 ),
		'invert' => array( 1, 5 ),
		'sum' => array( 1, 5 ),
		'isset' => array( 1, 5 ),
		'delete' => array( 1, 5 ),
		'break' => array( 1, 5 ),
		'continue' => array( 1, 5 ),
		'leftbracket' => array( 1, 5 ),
		'leftsquare' => array( 1, 5 ),
		'string' => array( 1, 5 ),
		'int' => array( 1, 5 ),
		'float' => array( 1, 5 ),
		'true' => array( 1, 5 ),
		'false' => array( 1, 5 ),
		'null' => array( 1, 5 ),
		'else' => array( 1, 5 ),
		'catch' => array( 1, 5 ),
		'rightcurly' => array( 1, 5 ),
	),
	118 => array(
		'$' => array( 1, 6 ),
		'if' => array( 1, 6 ),
		'for' => array( 1, 6 ),
		'try' => array( 1, 6 ),
		'leftcurly' => array( 1, 6 ),
		'id' => array( 1, 6 ),
		'invert' => array( 1, 6 ),
		'sum' => array( 1, 6 ),
		'isset' => array( 1, 6 ),
		'delete' => array( 1, 6 ),
		'break' => array( 1, 6 ),
		'continue' => array( 1, 6 ),
		'leftbracket' => array( 1, 6 ),
		'leftsquare' => array( 1, 6 ),
		'string' => array( 1, 6 ),
		'int' => array( 1, 6 ),
		'float' => array( 1, 6 ),
		'true' => array( 1, 6 ),
		'false' => array( 1, 6 ),
		'null' => array( 1, 6 ),
		'else' => array( 1, 6 ),
		'catch' => array( 1, 6 ),
		'rightcurly' => array( 1, 6 ),
	),
	119 => array(
		'$' => array( 1, 7 ),
		'if' => array( 1, 7 ),
		'for' => array( 1, 7 ),
		'try' => array( 1, 7 ),
		'leftcurly' => array( 1, 7 ),
		'id' => array( 1, 7 ),
		'invert' => array( 1, 7 ),
		'sum' => array( 1, 7 ),
		'isset' => array( 1, 7 ),
		'delete' => array( 1, 7 ),
		'break' => array( 1, 7 ),
		'continue' => array( 1, 7 ),
		'leftbracket' => array( 1, 7 ),
		'leftsquare' => array( 1, 7 ),
		'string' => array( 1, 7 ),
		'int' => array( 1, 7 ),
		'float' => array( 1, 7 ),
		'true' => array( 1, 7 ),
		'false' => array( 1, 7 ),
		'null' => array( 1, 7 ),
		'else' => array( 1, 7 ),
		'catch' => array( 1, 7 ),
		'rightcurly' => array( 1, 7 ),
	),
);

static $goto = array(
	0 => array( 1 => 20, 2 => 21, 3 => 22, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	1 => array(),
	2 => array( 3 => 41, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	3 => array(),
	4 => array( 2 => 43, 3 => 22, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	5 => array( 1 => 44, 22 => 46, 2 => 21, 23 => 47, 3 => 45, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	6 => array( 17 => 50, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	7 => array( 15 => 51, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	8 => array(),
	9 => array(),
	10 => array(),
	11 => array( 18 => 54, 3 => 53, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	12 => array(),
	13 => array(),
	14 => array(),
	15 => array(),
	16 => array(),
	17 => array(),
	18 => array(),
	19 => array(),
	20 => array( 2 => 55, 3 => 22, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	21 => array(),
	22 => array(),
	23 => array( 24 => 59 ),
	24 => array(),
	25 => array(),
	26 => array(),
	27 => array(),
	28 => array(),
	29 => array(),
	30 => array(),
	31 => array(),
	32 => array(),
	33 => array(),
	34 => array(),
	35 => array(),
	36 => array(),
	37 => array(),
	38 => array(),
	39 => array( 3 => 70, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	40 => array( 22 => 46, 23 => 47, 3 => 71, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	41 => array(),
	42 => array( 4 => 74, 5 => 75 ),
	43 => array(),
	44 => array( 2 => 55, 3 => 22, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	45 => array(),
	46 => array(),
	47 => array(),
	48 => array(),
	49 => array( 24 => 59 ),
	50 => array(),
	51 => array(),
	52 => array( 18 => 82, 3 => 53, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	53 => array(),
	54 => array(),
	55 => array(),
	56 => array(),
	57 => array( 6 => 85, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	58 => array( 3 => 87, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	59 => array(),
	60 => array( 7 => 88, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	61 => array( 9 => 89, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	62 => array( 10 => 90, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	63 => array( 11 => 91, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	64 => array( 12 => 92, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	65 => array( 13 => 93, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	66 => array( 13 => 94, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	67 => array( 16 => 95, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	68 => array( 16 => 96, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	69 => array( 5 => 97 ),
	70 => array(),
	71 => array(),
	72 => array(),
	73 => array(),
	74 => array(),
	75 => array( 24 => 59 ),
	76 => array(),
	77 => array(),
	78 => array( 3 => 102, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	79 => array(),
	80 => array( 23 => 103, 3 => 71, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	81 => array(),
	82 => array(),
	83 => array(),
	84 => array( 3 => 105, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	85 => array(),
	86 => array(),
	87 => array(),
	88 => array(),
	89 => array(),
	90 => array(),
	91 => array(),
	92 => array(),
	93 => array(),
	94 => array(),
	95 => array(),
	96 => array(),
	97 => array( 24 => 59 ),
	98 => array( 2 => 109, 3 => 22, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	99 => array( 3 => 110, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	100 => array( 5 => 111 ),
	101 => array( 5 => 112 ),
	102 => array(),
	103 => array(),
	104 => array(),
	105 => array(),
	106 => array(),
	107 => array( 7 => 113, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 5 => 49, 21 => 38 ),
	108 => array(),
	109 => array(),
	110 => array(),
	111 => array( 24 => 59 ),
	112 => array( 24 => 59 ),
	113 => array(),
	114 => array( 2 => 117, 3 => 22, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	115 => array( 2 => 118, 3 => 22, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	116 => array( 2 => 119, 3 => 22, 6 => 24, 5 => 23, 7 => 25, 8 => 26, 9 => 27, 10 => 28, 11 => 29, 12 => 30, 13 => 31, 14 => 32, 15 => 33, 16 => 34, 17 => 35, 19 => 36, 20 => 37, 21 => 38 ),
	117 => array(),
	118 => array(),
	119 => array(),
);

}
