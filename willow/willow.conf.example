/*
 * @(#) $Id$
 *
 * This is an example configuration file.  You will need to modify it for
 * your installation.
 */

/*
 * Any number of backends can be defined.  The name can be an IP
 * address or a hostname.  For hostnames, all addresses associated
 * with the interface will be added.
 */
backend "127.0.0.1" {
	/*
	 * port defaults to 80 if not specified.
	 */

	port = 8081;
};

/*
 * You can also force a particular address family (v4 or v6) when
 * using a hostname.
 */
backend "backends.mycompany.com" {
	aftype = ipv6;	/* only connect to IPv6 addresses */
};

/*
 * Any number of listeners can be defined.  Hostnames are allowed,
 * the same as backend{}.
 */
listen "127.0.0.1" {
	port = 8080;
};

/*
 * Controls global caching options.
 */
cache {
	/*
	 * Every expire_every seconds, the oldest expire_threshold%
	 * objects will be removed from the cache, using an LRU
	 * algorithm.  This only occurs if the cache is more than
	 * (100 - expire_theshold)% full.
	 */
	expire-every = 1 hour;
	expire-threshold = 5;

	/*
	 * Compress data if the client indicates it supports deflate or
	 * gzip encoding.  Note that this has a large impact on raw
	 * throughput when serving cached documents.
	 *
	 * compress_level should be between 1 (fastest, worst compression)
	 * and 9 (slowest, best compression).  The default is 6.
	 */
        compress = yes;
	compress-level = 6;

	/*
	 * If a backend is not available, wait this amount of time before
	 * retrying it.
	 */
	backend-retry = 30 seconds;

	/*
	 * According to RFC2616, data marked as "private" should not be
	 * stored by a proxy cache which is shared by more than one user.
	 * If you want this cache to treat itself as private, and cache
	 * such data anyway, enable this.  Note that this means one user's
	 * private data may be served to other users, so don't enable this
	 * unless you're sure the backend application will never mark data
	 * which is actually private this way.
	 */
	cache-private = no;

	/*
	 * Use the CARP algorithm to route requests for the same object
	 * to the same proxy? (Improves cache ratio of caches behind this
	 * one, at the expense of a small bit of performance).
	 */
	use-carp = yes;
};

/*
 * For now, only one cache directory is allowed.
 * Run "willow -z" to create the initial directory.  Make sure it
 * doesn't exist first.
 *
 * If you specify no cache directories, Willow will switch to a more
 * efficient proxy-only mode.  This is most useful in combination with
 * CARP hashing in front of another cache.
 */
cache-dir "/home/kate/mediawiki/willow/cache" {
	size = 10 mb;
};

log {
	/*
	 * Levels:
	 * 0 - debug (only if configured with --enable-debug)
	 * 1 - notice
	 * 2 - warning
	 * 3 - error
	 */
	level = 0;

	/*
	 * Log to a file on the filesystem.
	 */
	file = "/var/log/willow/willow.log";

	/*
	 * Log to system.
	 */
	syslog = yes;

	/*
	 * Facilities:
	 *
	 * user, mail, daemon, auth, lpr, news, uucp,
	 * cron, audit, local0 .. local7.
	 *
	 * If not specified, defaults to 'daemon'.
	 */
	facility = daemon;

	/*
	 * Log client requests.  Every 1/log-sample requests are logged.
	 *
	 * Note: this is quite slow; if you don't need this, you may find
	 * that disabling it or increasing the sample rate improves performance
	 * significantly.
	 */
	access-log = "/var/log/willow/access.log";
	log-sample = 2;

	/*
	 * Log client requests to a UDP socket.  Every 1/log-sample requests
	 * are logged.  This is much more efficient than a file-based access log.
	 *
	 * The wlogread binary (installed into <prefix>/bin) can read the UDP
	 * log and convert it into several formats.
	 */
	udp-log = yes;
	udp-port = 4445;
	udp-host = "127.0.0.1";
};

/*
 * Access control.
 *
 * access-v4 and access-v6 are lists of addresses that are granted or denied
 * permission to use this proxy.  Denied networks will be sent an error page
 * for any request.
 *
 * This is *not* an ACL; entries are not compared in order.  Rather, the best
 * match prefix for the client's address is used to decide whether they are
 * given access.
 *
 * There is no default-deny.  To deny access by default, add a deny entry for
 * all addresses (0.0.0.0/0 in IPv4 or ::0/0 in IPv6).
 *
 * If "apply-at = connect;" is set in an access block, clients matching a
 * deny rule in that block will be disconnected immediately, without waiting
 * for a request or sending any error message.  You can specify multiple
 * access blocks, with or without apply-at; they will be merged.
 */

access-v4 {
	/* allow localhost and the local network */
	allow = "127.0.0.1/32", "10.0.0.0/8";

	/* deny an evil network */
	deny = "1.2.3.0/24";
};

access-v6 {
	/* allow everyone except localhost */
	allow = "::0/0";
	deny = "::1/128";
};

/*
 * Statistics.
 *
 * The server collects runtime statistics for use by the 'wgetstats' program.
 */
stats {
	enable = yes;

	/* How often to re-calculate averages (default: 300) */
	interval = 30;

	/* Default port is 4446 */
	port = 4446;

	/*
	 * Only allow stats requests from certain networks.  If you specify
	 * either allow-v4 or allow-v6, *both* will be set to default-deny.
	 */
	allow-v4 = "127.0.0.0/8";
	allow-v6 = "::0/0";
};
