# @(#) $Header$

AC_INIT(willow, 1.0-cvs, river@attenuate.org)

USER_CXXFLAGS="$CXXFLAGS"

# autoconf brokenness
if test -z "$CC"; then
	CC=cc
fi

gcc_common="-W -Wall -Wno-unused -g"
debug_cxxflags_gcc="$gcc_common -O0"
prod_cxxflags_gcc="$gcc_common -O3"
sunpro_common="-errshort=tags -errtags -mc -xc99"
debug_cxxflags_sunpro="-g $sunpro_common -v -xs"
prod_cxxflags_sunpro="-fast $sunpro_common -xdepend=yes -xipo=2 -xalias_level=std"

AC_CONFIG_HEADER(src/include/config.h)

echo ""
echo "examining environment..."
AC_LANG(C++)
AC_PROG_CC
AC_PROG_CXX

if test x${ac_compiler_gnu} = xyes; then
	debug_cxxflags=$debug_cxxflags_gcc
	prod_cxxflags=$prod_cxxflags_gcc
fi

AC_MSG_CHECKING(whether we are using the SunPro C compiler)
if $CC -V 2>&1 | grep "Sun C" >/dev/null; then
	AC_MSG_RESULT(yes)
	debug_cxxflags=$debug_cxxflags_sunpro
	prod_cxxflags=$prod_cxxflags_sunpro
else
	AC_MSG_RESULT(no)
fi

mycxxflags=$prod_cxxflags
AC_ARG_ENABLE(debug, AC_HELP_STRING([--enable-debug],[Compile with debug support]),
[	if test $enableval = yes; then
		AC_DEFINE([WILLOW_DEBUG], [], [Compile with debug support])
		mycxxflags=$debug_cxxflags
	fi
])

if test -z "$USER_CXXFLAGS"; then
	USE_CXXFLAGS=$mycxxflags
else
	USE_CXXFLAGS=$USER_CXXFLAGS
fi

echo "using CXXFLAGS: $USE_CXXFLAGS"

AC_PROG_INSTALL
AC_MAKE_INCLUDE
AC_PROG_YACC
AC_PROG_LEX

dependstyle=null

AC_CHECK_PROG(have_makedepend, makedepend, yes, no)
if test x$have_makedepend = xyes; then
	dependstyle=makedepend
fi

AC_MSG_CHECKING(if $CC supports -xM1)
cat >conftest.c <<eof
#include "conftest.h"
eof
touch conftest.h

if $CC -xM1 conftest.c >/dev/null 2>&1; then
	AC_MSG_RESULT(yes)
	dependstyle=dashM
	dashMflag=-xM1
	AC_SUBST(dashMflag)
else
	AC_MSG_RESULT(no)
fi

rm -f conftest.c conftest.h

AC_MSG_CHECKING(if $CC supports -MM)
cat >conftest.c <<eof
#include "conftest.h"
eof
touch conftest.h

if $CC -MM conftest.c >/dev/null 2>&1; then
	AC_MSG_RESULT(yes)
	dependstyle=dashM
	dashMflag=-MM
	AC_SUBST(dashMflag)
else
	AC_MSG_RESULT(no)
fi

rm -f conftest.c conftest.h

AC_MSG_CHECKING([for GNU make])
if `make --version 2>&1 | grep '^GNU Make' >/dev/null`; then
        AC_MSG_RESULT(yes)
        M_FLAGS=--no-print-directory
else
        AC_MSG_RESULT(no)
        M_FLAGS=""
fi
AC_SUBST(M_FLAGS)

AC_SUBST(dependstyle)

echo ""
echo "looking for required C functions..."
AC_SEARCH_LIBS(socket, socket)
AC_SEARCH_LIBS(inet_addr, nsl)
AC_SEARCH_LIBS(log10, m)
AC_SEARCH_LIBS(sendfile, sendfile)
AC_SEARCH_LIBS(zlibVersion, z,,AC_MSG_ERROR([zlib not found]))
AC_SEARCH_LIBS(pthread_key_create, pthread)

AC_CHECK_FUNC(strlcat,AC_DEFINE([HAVE_STRLCAT],,[Define this if you have strlcat()]),[AC_LIBOBJ(strlcat)])
AC_CHECK_FUNC(strlcpy,AC_DEFINE([HAVE_STRLCPY],,[Define this if you have strlcpy()]),[AC_LIBOBJ(strlcpy)])
AC_CHECK_FUNC(sendfilev,AC_DEFINE([HAVE_SENDFILE],,[Define this if you have sendfile()]))
AC_CHECK_FUNC(daemon,AC_DEFINE([HAVE_DAEMON],,[Define this if you have daemon()]),[AC_LIBOBJ(daemon)])
AC_CHECK_FUNC(setproctitle,AC_DEFINE([HAVE_SETPROCTITLE],,[Define this if you have setproctitle()]))
AC_CHECK_TYPE(socklen_t, AC_DEFINE([HAVE_SOCKLEN_T],,[Define this if you have socklen_t]),,[#include <sys/socket.h>])
AC_CHECK_HEADER([sys/queue.h],AC_DEFINE([HAVE_SYS_QUEUE_H],,[Define this if you have <sys/queue.h]))
AC_CHECK_HEADER([sys/sendfile.h],AC_DEFINE([HAVE_SYS_SENDFILE_H],,[Define this if you have <sys/sendfile.h>]))
AC_CHECK_HEADER([zlib.h],,AC_MSG_ERROR([zlib not found]))

AC_CHECK_LIB(event, event_add, [],[AC_ERROR([libevent not found])])

datadir="${datadir}/willow"
CXXFLAGS="$USE_CXXFLAGS"


PATH_LIBEXECDIR=`eval echo $libexecdir | sed -e "s,NONE,$prefix,"`
PATH_DATADIR=`eval echo $datadir`
PATH_SYSCONFDIR=`eval echo $sysconfdir`
AC_DEFINE_UNQUOTED([LIBEXECDIR], ["$PATH_LIBEXECDIR"], [Path to libexec dir])
AC_DEFINE_UNQUOTED([DATADIR], ["$PATH_DATADIR"], [Path to data dir])
AC_DEFINE_UNQUOTED([SYSCONFDIR], ["$PATH_SYSCONFDIR"], [Path to sysconf dir])

AC_OUTPUT(
	mk/prog.mk 
	mk/lib.mk
	mk/vars.mk 
	mk/rules.mk 
	mk/data.mk 
	mk/subdir.mk
	mk/depend.dashM.mk 
	mk/depend.makedepend.mk 
	mk/depend.null.mk
	mk/Makefile
	Makefile 
	src/Makefile 
	src/willow/Makefile
	src/wreadlog/Makefile
	src/wgetstats/Makefile
	errors/Makefile)
