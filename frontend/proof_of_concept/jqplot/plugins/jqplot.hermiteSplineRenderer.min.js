/**
 * jqPlot
 * Pure JavaScript plotting plugin using jQuery
 *
 * Version: 1.0.0b2_r833
 *
 * Copyright (c) 2009-2011 Chris Leonello
 * jqPlot is currently available for use in all personal or commercial projects 
 * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL 
 * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can 
 * choose the license that best suits your project and use it accordingly. 
 *
 * Although not required, the author would appreciate an email letting him 
 * know of any substantial use of jqPlot.  You can reach the author at: 
 * chris at jqplot dot com or see http://www.jqplot.com/info.php .
 *
 * If you are feeling kind and generous, consider supporting the project by
 * making a donation at: http://www.jqplot.com/donate.php .
 *
 * sprintf functions contained in jqplot.sprintf.js by Ash Searle:
 *
 *     version 2007.04.27
 *     author Ash Searle
 *     http://hexmen.com/blog/2007/03/printf-sprintf/
 *     http://hexmen.com/js/sprintf.js
 *     The author (Ash Searle) has placed this code in the public domain:
 *     "This code is unrestricted: you are free to use it however you like."
 * 
 */
(function(a){a.jqplot.hermiteSplineRenderer=function(){a.jqplot.LineRenderer.call(this)};a.jqplot.hermiteSplineRenderer.prototype=new a.jqplot.LineRenderer();a.jqplot.hermiteSplineRenderer.prototype.constructor=a.jqplot.hermiteSplineRenderer;a.jqplot.hermiteSplineRenderer.prototype.init=function(b){this.steps=50;this.tension=0.5;a.extend(true,this,b);var c={lineJoin:"miter",lineCap:"round",fill:false,isarc:false,strokeStyle:this.color,lineWidth:this.lineWidth};this.renderer.shapeRenderer.init(c)};a.jqplot.hermiteSplineRenderer.prototype.draw=function(v,y,b){var w;var q=(b!=undefined)?b:{};var A=(q.showLine!=undefined)?q.showLine:this.showLine;if(y.length){if(A){if(y.length>1){var n=[];for(var w=0;w<y.length-1;w++){var x=this.steps;var z=this.tension;for(var o=0;o<x;o++){var r=o/x;var k=(1+2*r)*Math.pow((1-r),2);var j=r*Math.pow((1-r),2);var g=Math.pow(r,2)*(3-2*r);var e=Math.pow(r,2)*(r-1);if(y[w-1]){var h=z*(y[w+1][0]-y[w-1][0]);var f=z*(y[w+1][1]-y[w-1][1])}else{var h=z*(y[w+1][0]-y[w][0]);var f=z*(y[w+1][1]-y[w][1])}if(y[w+2]){var m=z*(y[w+2][0]-y[w][0]);var l=z*(y[w+2][1]-y[w][1])}else{var m=z*(y[w+1][0]-y[w][0]);var l=z*(y[w+1][1]-y[w][1])}var d=k*y[w][0]+g*y[w+1][0]+j*h+e*m;var c=k*y[w][1]+g*y[w+1][1]+j*f+e*l;var u=[d,c];n.push(u)}}y=n}this.renderer.shapeRenderer.draw(v,y,q)}}}})(jQuery);